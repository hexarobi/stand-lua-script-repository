local setmetatable = setmetatable
local utils = {}
utils.__index = utils
utils = setmetatable(utils, {})
utils.MAX_INT = (1 << 31) - 1
utils.MIN_INT = -(1 << 31)
utils.MAX_FLOAT = utils.MAX_INT + 0.0
utils.MIN_FLOAT = utils.MIN_INT + 0.0

local Alloc = memory.alloc
local ReadLong = memory.read_long
local WriteLong = memory.write_long

local blip_ids = Alloc(8)
local stats_alloc = Alloc(4)
local entity_ptr = Alloc(4)

--[[
    2793046 + 986 = vehicle slot
]]

--[[void]] local function DisplayOnscreenKeyboard(--[[int]] p0,--[[string]] windowTitle,--[[string]] p2,--[[string]] defaultText,--[[string]] defaultConcat1,--[[string]] defaultConcat2,--[[string]] defaultConcat3,--[[int]] maxInputLength)native_invoker.begin_call()native_invoker.push_arg_int(p0)native_invoker.push_arg_string(windowTitle)native_invoker.push_arg_string(p2)native_invoker.push_arg_string(defaultText)native_invoker.push_arg_string(defaultConcat1)native_invoker.push_arg_string(defaultConcat2)native_invoker.push_arg_string(defaultConcat3)native_invoker.push_arg_int(maxInputLength)native_invoker.end_call_2(0x00DC833F2568DBF6)end
--[[BOOL (bool)]] local function NetworkHasControlOfEntity(--[[Entity (int)]] entity)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.end_call_2(0x01BF60A500E28887)return native_invoker.get_return_value_bool()end
--[[int]] local function UpdateOnscreenKeyboard()native_invoker.begin_call()native_invoker.end_call_2(0x0CF2B696BBF945AE)return native_invoker.get_return_value_int()end
--[[void]] local function SetRemotePlayerAsGhost(--[[Player (int)]] player,--[[BOOL (bool)]] p1)native_invoker.begin_call()native_invoker.push_arg_int(player)native_invoker.push_arg_bool(p1)native_invoker.end_call_2(0xA7C511FA1C5BDA38)end
--[[BOOL (bool)]] local function NetworkRequestControlOfEntity(--[[Entity (int)]] entity)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.end_call_2(0xB69317BF5E782347)return native_invoker.get_return_value_bool()end
--[[string]] local function GetOnscreenKeyboardResult()native_invoker.begin_call()native_invoker.end_call_2(0x8362B09B91893647)return native_invoker.get_return_value_string()end
--[[Cam (int)]] local function GetRenderingCam()native_invoker.begin_call()native_invoker.end_call_2(0x5234F9F10919EABA)return native_invoker.get_return_value_int()end
--[[void]] local function RenderScriptCams(--[[BOOL (bool)]] render,--[[BOOL (bool)]] ease,--[[int]] easeTime,--[[BOOL (bool)]] p3,--[[BOOL (bool)]] p4,--[[Any (int)]] p5)native_invoker.begin_call()native_invoker.push_arg_bool(render)native_invoker.push_arg_bool(ease)native_invoker.push_arg_int(easeTime)native_invoker.push_arg_bool(p3)native_invoker.push_arg_bool(p4)native_invoker.push_arg_int(p5)native_invoker.end_call_2(0x07E5B515DB0636FC)end
--[[Vector3 (vector3)]] local function GetEntityCoords(--[[Entity (int)]] entity,--[[BOOL (bool)]] alive)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_bool(alive)native_invoker.end_call_2(0x3FEF770D40960D5A)return native_invoker.get_return_value_vector3()end
--[[Vector3 (vector3)]] local function GetEntityRotation(--[[Entity (int)]] entity,--[[int]] rotationOrder)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_int(rotationOrder)native_invoker.end_call_2(0xAFBD61CC738D9EB9)return native_invoker.get_return_value_vector3()end
--[[Cam (int)]] local function CreateCam(--[[string]] camName,--[[BOOL (bool)]] p1)native_invoker.begin_call()native_invoker.push_arg_string(camName)native_invoker.push_arg_bool(p1)native_invoker.end_call_2(0xC3981DCE61D9E13F)return native_invoker.get_return_value_int()end
--[[void]] local function HardAttachCamToEntity(--[[Cam (int)]] cam,--[[Entity (int)]] entity,--[[float]] xRot,--[[float]] yRot,--[[float]] zRot,--[[float]] xOffset,--[[float]] yOffset,--[[float]] zOffset,--[[BOOL (bool)]] isRelative)native_invoker.begin_call()native_invoker.push_arg_int(cam)native_invoker.push_arg_int(entity)native_invoker.push_arg_float(xRot)native_invoker.push_arg_float(yRot)native_invoker.push_arg_float(zRot)native_invoker.push_arg_float(xOffset)native_invoker.push_arg_float(yOffset)native_invoker.push_arg_float(zOffset)native_invoker.push_arg_bool(isRelative)native_invoker.end_call_2(0x202A5ED9CE01D6E7)end
--[[void]] local function PointCamAtEntity(--[[Cam (int)]] cam,--[[Entity (int)]] entity,--[[float]] p2,--[[float]] p3,--[[float]] p4,--[[BOOL (bool)]] p5)native_invoker.begin_call()native_invoker.push_arg_int(cam)native_invoker.push_arg_int(entity)native_invoker.push_arg_float(p2)native_invoker.push_arg_float(p3)native_invoker.push_arg_float(p4)native_invoker.push_arg_bool(p5)native_invoker.end_call_2(0x5640BFF86B16E8DC)end
--[[void]] local function SetCamActive(--[[Cam (int)]] cam,--[[BOOL (bool)]] active)native_invoker.begin_call()native_invoker.push_arg_int(cam)native_invoker.push_arg_bool(active)native_invoker.end_call_2(0x026FB97D0A425F84)end
--[[void]] local function SetCamCoord(--[[Cam (int)]] cam,--[[float]] posX,--[[float]] posY,--[[float]] posZ)native_invoker.begin_call()native_invoker.push_arg_int(cam)native_invoker.push_arg_float(posX)native_invoker.push_arg_float(posY)native_invoker.push_arg_float(posZ)native_invoker.end_call_2(0x4D41783FB745E42E)end
--[[void]] local function DestroyCam(--[[Cam (int)]] cam,--[[BOOL (bool)]] bScriptHostCam)native_invoker.begin_call()native_invoker.push_arg_int(cam)native_invoker.push_arg_bool(bScriptHostCam)native_invoker.end_call_2(0x865908C81A2C22E9)end
--[[BOOL (bool)]] local function StatGetInt(--[[Hash (int)]] statHash,--[[int* (pointer)]] outValue,--[[int]] p2)native_invoker.begin_call()native_invoker.push_arg_int(statHash)native_invoker.push_arg_pointer(outValue)native_invoker.push_arg_int(p2)native_invoker.end_call_2(0x767FBC2AC802EF3D)return native_invoker.get_return_value_bool()end
--[[BOOL (bool)]] local function HasModelLoaded(--[[Hash (int)]] model)native_invoker.begin_call()native_invoker.push_arg_int(model)native_invoker.end_call_2(0x98A4EB5D89A0C952)return native_invoker.get_return_value_bool()end
--[[void]] local function RequestModel(--[[Hash (int)]] model)native_invoker.begin_call()native_invoker.push_arg_int(model)native_invoker.end_call_2(0x963D27A58DF860AC)end
--[[void]] local function RequestNamedPtfxAsset(--[[string]] fxName)native_invoker.begin_call()native_invoker.push_arg_string(fxName)native_invoker.end_call_2(0xB80D8756B4668AB6)end
--[[BOOL (bool)]] local function HasNamedPtfxAssetLoaded(--[[string]] fxName)native_invoker.begin_call()native_invoker.push_arg_string(fxName)native_invoker.end_call_2(0x8702416E512EC454)return native_invoker.get_return_value_bool()end
--[[void]] local function PlaySoundFrontend(--[[int]] soundId,--[[string]] audioName,--[[string]] audioRef,--[[BOOL (bool)]] p3)native_invoker.begin_call()native_invoker.push_arg_int(soundId)native_invoker.push_arg_string(audioName)native_invoker.push_arg_string(audioRef)native_invoker.push_arg_bool(p3)native_invoker.end_call_2(0x67C540AA08E4A6F5)end
--[[BOOL (bool)]] local function StartParticleFxNonLoopedOnEntity(--[[string]] effectName,--[[Entity (int)]] entity,--[[float]] offsetX,--[[float]] offsetY,--[[float]] offsetZ,--[[float]] rotX,--[[float]] rotY,--[[float]] rotZ,--[[float]] scale,--[[BOOL (bool)]] axisX,--[[BOOL (bool)]] axisY,--[[BOOL (bool)]] axisZ)native_invoker.begin_call()native_invoker.push_arg_string(effectName)native_invoker.push_arg_int(entity)native_invoker.push_arg_float(offsetX)native_invoker.push_arg_float(offsetY)native_invoker.push_arg_float(offsetZ)native_invoker.push_arg_float(rotX)native_invoker.push_arg_float(rotY)native_invoker.push_arg_float(rotZ)native_invoker.push_arg_float(scale)native_invoker.push_arg_bool(axisX)native_invoker.push_arg_bool(axisY)native_invoker.push_arg_bool(axisZ)native_invoker.end_call_2(0x0D53A3B8DA0809D2)return native_invoker.get_return_value_bool()end
--[[void]] local function UseParticleFxAsset(--[[string]] name)native_invoker.begin_call()native_invoker.push_arg_string(name)native_invoker.end_call_2(0x6C38AF3693A69A91)end
--[[void]] local function RequestModel(--[[Hash (int)]] model)native_invoker.begin_call()native_invoker.push_arg_int(model)native_invoker.end_call_2(0x963D27A58DF860AC)end
--[[BOOL (bool)]] local function HasModelLoaded(--[[Hash (int)]] model)native_invoker.begin_call()native_invoker.push_arg_int(model)native_invoker.end_call_2(0x98A4EB5D89A0C952)return native_invoker.get_return_value_bool()end
--[[void]] local function RequestCutscene(--[[string]] cutsceneName,--[[int]] flags)native_invoker.begin_call()native_invoker.push_arg_string(cutsceneName)native_invoker.push_arg_int(flags)native_invoker.end_call_2(0x7A86743F475D9E09)end
--[[BOOL (bool)]] local function HasThisCutsceneLoaded(--[[string]] cutsceneName)native_invoker.begin_call()native_invoker.push_arg_string(cutsceneName)native_invoker.end_call_2(0x228D3D94F8A11C3C)return native_invoker.get_return_value_bool()end
--[[void]] local function StartCutscene(--[[int]] flags)native_invoker.begin_call()native_invoker.push_arg_int(flags)native_invoker.end_call_2(0x186D5CB5E7B0FF7B)end
--[[void]] local function StopCutsceneImmediately()native_invoker.begin_call()native_invoker.end_call_2(0xD220BDD222AC4A1E)end
--[[BOOL (bool)]] local function GetEntityPlayerIsFreeAimingAt(--[[Player (int)]] player,--[[Entity* (pointer)]] entity)native_invoker.begin_call()native_invoker.push_arg_int(player)native_invoker.push_arg_pointer(entity)native_invoker.end_call_2(0x2975C866E6713290)return native_invoker.get_return_value_bool()end

local ref_by_path = menu.ref_by_path
local scripthost_ref = ref_by_path("Online>Session>Become Script Host")

utils.data = {
    achievements = {
        ["1"] = "Welcome to Los Santos",       
        ["2"] = "A Friendship Resurrected",    
        ["3"] = "A Fair Day's Pay",
        ["4"] = "The Moment of Truth",
        ["5"] = "To Live or Die in Los Santos",
        ["6"] = "Diamond Hard",
        ["7"] = "Subversive",
        ["8"] = "Blitzed",
        ["9"] = "Small Town, Big Job",
        ["10"] = "The Government Gimps",       
        ["11"] = "The Big One!",
        ["12"] = "Solid Gold, Baby!",
        ["13"] = "Career Criminal",
        ["14"] = "San Andreas Sightseer",
        ["15"] = "All's Fare in Love and War",
        ["16"] = "TP Industries Arms Race",
        ["17"] = "Multi-Disciplined",
        ["18"] = "From Beyond the Stars",
        ["19"] = "A Mystery, Solved",
        ["20"] = "Waste Management",
        ["21"] = "Red Mist",
        ["22"] = "Show Off",
        ["23"] = "Kifflom!",
        ["24"] = "Three Man Army",
        ["25"] = "Out of Your Depth",
        ["26"] = "Altruist Acolyte",
        ["27"] = "A Lot of Cheddar",
        ["28"] = "Trading Pure Alpha",
        ["29"] = "Pimp My Sidearm",
        ["30"] = "Wanted: Alive Or Alive",
        ["31"] = "Los Santos Customs",
        ["32"] = "Close Shave",
        ["33"] = "Off the Plane",
        ["34"] = "Three-Bit Gangster",
        ["35"] = "Making Moves",
        ["36"] = "Above the Law",
        ["37"] = "Numero Uno",
        ["38"] = "The Midnight Club",
        ["39"] = "Unnatural Selection",
        ["40"] = "Backseat Driver",
        ["41"] = "Run Like The Wind",
        ["42"] = "Clean Sweep",
        ["43"] = "Decorated",
        ["44"] = "Stick Up Kid",
        ["45"] = "Enjoy Your Stay",
        ["46"] = "Crew Cut",
        ["47"] = "Full Refund",
        ["48"] = "Dialling Digits",
        ["49"] = "American Dream",
        ["50"] = "A New Perspective",
        ["51"] = "Be Prepared",
        ["52"] = "In the Name of Science",
        ["53"] = "Dead Presidents",
        ["54"] = "Parole Day",
        ["55"] = "Shot Caller",
        ["56"] = "Four Way",
        ["57"] = "Live a Little",
        ["58"] = "Can't Touch This",
        ["59"] = "Mastermind",
        ["60"] = "Vinewood Visionary",
        ["61"] = "Majestic",
        ["62"] = "Humans of Los Santos",
        ["63"] = "First Time Director",
        ["64"] = "Animal Lover",
        ["65"] = "Ensemble Piece",
        ["66"] = "Cult Movie",
        ["67"] = "Location Scout",
        ["68"] = "Method Actor",
        ["69"] = "Cryptozoologist",
        ["70"] = "Getting Started",
        ["71"] = "The Data Breaches",
        ["72"] = "The Bogdan Problem",
        ["73"] = "The Doomsday Scenario",
        ["74"] = "A World Worth Saving",
        ["75"] = "Orbital Obliteration",
        ["76"] = "Elitist",
        ["77"] = "Masterminds",
    },
    bunker_research = {
        ["APC Sam Battery"] = 21806,
        ["Ballistic Equipment"] = 21807,
        ["Half Track 20MM Quad Cannons"] = 21808,
        ["Weaponized Tampa Dual Remote Minigun"] = 21809,        
        ["Weaponized Tampa Rear Firing Mortar"] = 21810,
        ["Weaponized Tampa Front Missile Launchers"] = 21811,    
        ["Weaponized Tampa Heavy Chassis Armor"] = 21812,        
        ["Dune Fav 40MM Grenade Launcher"] = 21813,
        ["Dune Fav 762MM Minigun"] = 21814,
        ["Insurgent Pick Up Custom 50 Cal Minigun"] = 21815,     
        ["Insurgent Pick Up Custom Heavy Armor Plating"] = 21816,
        ["Technical Custom 762MM Minigun"] = 21817,
        ["Technical Custom Ram Bar"] = 21818,
        ["Technical Custom Brute Bar"] = 21819,
        ["Technical Custom Heavy Chassis Armor"] = 21820,
        ["Oppressor Rockets"] = 21821,
        ["Fractal Livery Set"] = 21822,
        ["Digital Livery Set"] = 21823,
        ["Geometric Livery Set"] = 21824,
        ["Nature Reserve Livery"] = 21825,
        ["Naval Battle Livery"] = 21826,
        ["Anti Aircraft Trailer Dual 20MM Flak Cannon"] = 21827,
        ["Anti Aircraft Trailer Homing Missile Battery"] = 21828,
        ["Mobile Operations Center Rear Turrets"] = 21829,
        ["Incendiary Rounds"] = 21830,
        ["Hollow Point Rounds"] = 21831,
        ["Armor Piercing Rounds"] = 21832,
        ["Full Metal Jacket Rounds"] = 21833,
        ["Explosive Rounds"] = 21834,
        ["Pistol MK II Rail Mount"] = 21835,
        ["Pistol MK II Compensator"] = 21836,
        ["Smg MK II Holographic Sight"] = 21837,
        ["Smg MK II Heavy Barrel"] = 21838,
        ["Heavy Sniper MK II Night Vision Scope"] = 21839,
        ["Heavy Sniper MK II Thermal Scope"] = 21840,
        ["Heavy Sniper MK II Heavy Barrel"] = 21841,
        ["Combat Mg MK II Holographic Sight"] = 21842,
        ["Combat Mg MK II Heavy Barrel"] = 21843,
        ["Assault Rifle MK II Holographic Sight"] = 21844,
        ["Assault Rifle MK II Heavy Barrel"] = 21845,
        ["Carbine Rifle MK II Holographic Sight"] = 21846,
        ["Carbine Rifle MK II Heavy Barrel"] = 21847,
        ["Proximity Mines"] = 21848,
        ["Tiger Stripe"] = 21849,
        ["Skull"] = 21850,
        ["Sessanta Nove"] = 21851,
        ["Perseus"] = 21852,
        ["Leopard Print"] = 21853,
        ["Zebra Stripe"] = 21854,
        ["Geometry"] = 21855,
        ["Book"] = 21856
    },
    aircraft_trade_in = {
        ["Ultralight"] = 22712,
        ["Rogue"] = 22713,
        ["Alpha-Z1"] = 22714,
        ["Havok"] = 22715,
        ["LF-22 Starling"] = 22716,
        ["V-65 Molotok"] = 22717,
        ["Tula"] = 22718,
        ["RM-10 Bombushka"] = 22719,
        ["Howard NX-25"] = 22720,
        ["Mogul"] = 22721,
        ["Pyro"] = 22722,
        ["Seabreeze"] = 22723,
        ["P-45 Nakota"] = 22724,
        ["FH-1 Hunter"] = 22725
    },
    property_ids = {
        ["Invalid"] = 0,
        ["Eclipse Towers 31"] = 1,
        ["Eclipse Towers 9"] = 2,
        ["Eclipse Towers 40"] = 3,
        ["Eclipse Towers 5"] = 4,
        ["3 Alta St, Apt 10"] = 5,
        ["3 Alta St, Apt 57"] = 6,
        ["Del Perro Heights, Apt 20"] = 7,
        ["Power St, Apt 3"] = 8,
        ["Spanish Ave, Apt 1"] = 9,
        ["Las Lagunas Blv, 4"] = 10,
        ["Milton Rd, Apt 13"] = 11,
        ["The Royale, Apt 19"] = 12,
        ["S Mo Milton Drive"] = 13,
        ["Bay City Ave, Apt 45"] = 14,
        ["0325 S Rockford Dr"] = 15,
        ["Dream Tower, Apt 15"] = 16,
        ["Las Lagunas Blv, 9"] = 17,
        ["San Vitas St, Apt 2"] = 18,
        ["0112 S Rockford Dr, 13"] = 19,
        ["Vespucci Blvd, Apt 1"] = 20,
        ["Cougar Ave, Apt 19"] = 21,
        ["Prosperity St, 21"] = 22,
        ["Blvd Del Perro, 18"] = 23,
        ["Murrieta Heights"] = 24,
        ["Unit 14 Popular St"] = 25,
        ["Unit 2 Popular St"] = 26,
        ["331 Supply St"] = 27,
        ["Unit 1 Olympic Fwy"] = 28,
        ["Roy Lowenstein Blvd"] = 29,
        ["Little Bighorn Ave"] = 30,
        ["Unit 124 Popular St"] = 31,
        ["Roy Lowenstein Blvd"] = 32,
        ["0432 Davis Ave"] = 33,
        ["Del Perro Heights, 7"] = 34,
        ["Weazel Plaza, 101"] = 35,
        ["Weazel Plaza, 70"] = 36,
        ["Weazel Plaza, 26"] = 37,
        ["Integrity Way, 30"] = 38,
        ["Integrity Way, 35"] = 39,
        ["Richards Majestic, 4"] = 40,
        ["Richards Majestic, 51"] = 41,
        ["Tinsel Towers, Apt 45"] = 42,
        ["Tinsel Towers, Apt 29"] = 43,
        ["Paleto Blvd"] = 44,
        ["Strawberry Ave"] = 45,
        ["Grapeseed Ave"] = 46,
        ["Senora Way"] = 47,
        ["Great Ocean Highway"] = 48,
        ["197 Route 68"] = 49,
        ["870 Route 68"] = 50,
        ["1200 Route 68"] = 51,
        ["8754 Route 68"] = 52,
        ["1905 Davis Ave"] = 53,
        ["South Shambles St"] = 54,
        ["4531 Dry Dock St"] = 55,
        ["Exceptionalists Way"] = 56,
        ["Greenwich Parkway"] = 57,
        ["Innocence Blvd"] = 58,
        ["Blvd Del Perro"] = 59,
        ["Mirror Park Blvd"] = 60,
        ["Eclipse Towers 3"] = 61,
        ["Del Perro Heights 4"] = 62,
        ["Richards Majestics, 2"] = 63,
        ["Tinsel Towers, Apt 42"] = 64,
        ["Integrity Way, 28"] = 65,
        ["4 Hangman Ave"] = 66,
        ["12 Sustancia Rd"] = 67,
        ["4584 Procopio Dr"] = 68,
        ["4401 Procopio Dr"] = 69,
        ["0232 Paleto Blvd"] = 70,
        ["140 Zancudo Ave"] = 71,
        ["1893 Grapeseed Ave"] = 72,
        ["3655 Wild Oats Dr"] = 73,
        ["2044 North Conker Ave"] = 74,
        ["2868 Hillcrest Ave"] = 75,
        ["2862 Hillcrest Ave"] = 76,
        ["3677 Whispymound Dr"] = 77,
        ["2117 Milton Rd"] = 78,
        ["2866 Hillcrest Ave"] = 79,
        ["2874 Hillcrest Ave"] = 80,
        ["2113 Mad Wayne T Dr"] = 81,
        ["2045 North Conker Ave"] = 82,
        ["Eclipse Penthouse, Suite 1"] = 83,
        ["Eclipse Penthouse, Suite 2"] = 84,
        ["Eclipse Penthouse, Suite 3"] = 85,
        ["Invalid (1)"] = 86,
        ["Lombank West"] = 87,
        ["Maze Bank West"] = 88,
        ["Arcadius"] = 89,
        ["Maze Bank Tower"] = 90,
        ["Rancho Clubhouse"] = 91,
        ["Del Perro Beach Clubhouse"] = 92,
        ["Philbox Hill Clubhouse"] = 93,
        ["Great Chaparral Clubhouse"] = 94,
        ["Paleto Bay Clubhouse"] = 95,
        ["Sandy Shores Clubhouse"] = 96,
        ["La Mesa Clubhouse"] = 97,
        ["Vinewood Clubhouse"] = 98,
        ["Hawick Clubhouse"] = 99,
        ["Grapeseed Clubhouse"] = 100,
        ["Paleto Bay Clubhouse (0)"] = 101,
        ["Vespucci Beach Clubhouse"] = 102,
        ["Office Garage 1 (Lombank)"] = 103,
        ["Office Garage 2 (Lombank)"] = 104,
        ["Office Garage 3 (Lombank)"] = 105,
        ["Office Garage 1 (Maze Bank West)"] = 106,
        ["Office Garage 2 (Maze Bank West)"] = 107,
        ["Office Garage 3 (Maze Bank West)"] = 108,
        ["Office Garage 1 (Arcadius)"] = 109,
        ["Office Garage 2 (Arcadius)"] = 110,
        ["Office Garage 3 (Arcadius)"] = 111,
        ["Office Garage 1 (Maze Bank Tower)"] = 112,
        ["Office Garage 2 (Maze Bank Tower)"] = 113,
        ["Office Garage 3 (Maze Bank Tower)"] = 114,
        ["Vehicle Warehouse"] = 115,
        ["Definitely Invalid"] = (1 << 31) - 1
    },
    models = {
        BST = "prop_drug_package_02", -- Bull Shark Testosterone
        PRBUBBLE_FIGURE = "vm_prop_vm_colle_prbubble", -- PR Bubble Figure (casino)
    },
    blip_ids = blip_ids,
    casino_cards = {
        v3(-423, 1212.2420654297, 325.75823974609),
        v3(251.75042724609, 214.47691345215, 106.2868347168),
        v3(726.65893554688, 4187.9926757812, 40.709247589111),
        v3(98.641494750977, 6620.3461914062, 32.435325622559),
        v3(-284.32104492188, 6225.0498046875, 31.497802734375),
        v3(-746.65942382812, 5599.1127929688, 41.654636383057),
        v3(-1582.5842285156, 5201.306640625, 3.9842200279236),
        v3(-2302.9250488281, 3387.6613769531, 31.256513595581),
        v3(-525.26916503906, 4192.5961914062, 193.7311706543),
        v3(76.81307220459, 3704.1840820312, 41.077209472656),
        v3(-1101.5334472656, 2715.1713867188, 19.113943099976),
        v3(-289.46228027344, 2544.1696777344, 75.415725708008),
        v3(899.43041992188, 3555.9985351562, 33.827239990234),
        v3(1692.1530761719, 3589.4685058594, 35.620971679688),
        v3(1989.9505615234, 3045.7651367188, 47.215061187744),
        v3(1705.8336181641, 4919.57421875, 42.063674926758),
        v3(2122.9821777344, 4785.626953125, 40.970268249512),
        v3(2693.8247070312, 4325.2573242188, 45.851989746094),
        v3(2940.1257324219, 5325.48046875, 100.9655456543),
        v3(3689.2438964844, 4570.0986328125, 25.107622146606),
        v3(2750.11328125, 3467.5876464844, 55.711933135986),
        v3(-3147.9494628906, 1114.5297851562, 20.846366882324),
        v3(-3046.32421875, 584.15051269531, 7.9089274406433),
        v3(-1827.4471435547, 798.64654541016, 138.16368103027),
        v3(-1839.5356445312, -1233.5810546875, 13.017261505127),
        v3(-1513.4025878906, -104.87504577637, 54.184757232666),
        v3(-1152.6549072266, -525.74230957031, 32.125282287598),
        v3(-1167.3082275391, -232.46827697754, 37.947425842285),
        v3(-968.50933837891, 104.63013458252, 55.666194915771),
        v3(-1286.1337890625, -1117.7790527344, 6.990110874176),
        v3(-1205.1097412109, -1557.8605957031, 4.6167182922363),
        v3(-167.74485778809, -299.07723999023, 39.733310699463),
        v3(-410.2529296875, 586.95886230469, 124.61524963379),
        v3(-1029.8304443359, -2744.5158691406, 13.842164039612),
        v3(812.63977050781, -2978.5576171875, 6.0206537246704),
        v3(-72.862899780273, -2003.5484619141, 18.275272369385),
        v3(825.76293945312, -2158.7817382812, 29.619009017944),
        v3(989.45788574219, -1797.9250488281, 31.635583877563),
        v3(1130.9044189453, -980.15997314453, 46.415859222412),
        v3(204.16436767578, -1645.7397460938, 29.803215026855),
        v3(119.6584854126, -1295.4942626953, 29.269523620605),
        v3(11.997032165527, -1103.1140136719, 29.797031402588),
        v3(182.15174865723, -683.46136474609, 43.140930175781),
        v3(547.30261230469, -189.86305236816, 54.481349945068),
        v3(1160.9501953125, -314.63861083984, 69.205039978027),
        v3(2565.671875, 299.03778076172, 108.73483276367),
        v3(1486.19140625, 1128.1567382812, 114.33664703369),
        v3(2340.3068847656, 2570.3623046875, 47.730003356934),
        v3(731.86688232422, 2514.689453125, 73.170501708984),
        v3(188.28002929688, 3074.34375, 43.082084655762),
        v3(1874.6353759766, 6409.7607421875, 46.654632568359),
        v3(-535.78289794922, -1277.8481445312, 26.901580810547),
        v3(-102.85450744629, 366.66351318359, 112.88076019287)
    },
    signal_jammers = {
        v3(1006.372, -2881.68, 30.422),
        v3(-980.242, -2637.703, 88.528),
        v3(-688.195, -1399.329, 23.331),
        v3(1120.696, -1539.165, 54.871),
        v3(2455.134, -382.585, 112.635),
        v3(793.878, -717.299, 48.083),
        v3(-168.3, -590.153, 210.936),
        v3(-1298.3429, -435.8369, 108.129),
        v3(-2276.4841, 335.0941, 195.723),
        v3(-667.25, 228.545, 154.051),
        v3(682.561, 567.5302, 153.895),
        v3(2722.561, 1538.1031, 85.202),
        v3(758.539, 1273.6871, 445.181),
        v3(-3079.2578, 768.5189, 31.569),
        v3(-2359.338, 3246.831, 104.188),
        v3(1693.7318, 2656.602, 60.84),
        v3(3555.018, 3684.98, 61.27),
        v3(1869.0221, 3714.4348, 117.068),
        v3(2902.552, 4324.699, 101.106),
        v3(-508.6141, 4426.661, 87.511),
        v3(-104.417, 6227.2783, 63.696),
        v3(1607.5012, 6437.3154, 32.162),
        v3(2792.933, 5993.922, 366.867),
        v3(1720.6129, 4822.467, 59.7),
        v3(-1661.0101, -1126.742, 29.773),
        v3(-1873.49, 2058.357, 154.407),
        v3(2122.4602, 1750.886, 138.114),
        v3(-417.424, 1153.1431, 339.128),
        v3(3303.9011, 5169.7925, 28.735),
        v3(-1005.8481, 4852.1475, 302.025),
        v3(-306.627, 2824.859, 69.512),
        v3(1660.6631, -28.07, 179.137),
        v3(754.647, 2584.067, 133.904),
        v3(-279.9081, -1915.608, 54.173),
        v3(-260.4421, -2411.8071, 126.019),
        v3(552.132, -2221.8528, 73),
        v3(394.3919, -1402.144, 76.267),
        v3(1609.7911, -2243.767, 130.187),
        v3(234.2919, 220.771, 168.981),
        v3(-1237.1211, -850.4969, 82.98),
        v3(-1272.7319, 317.9532, 90.352),
        v3(0.088, -1002.4039, 96.32),
        v3(470.5569, -105.049, 135.908),
        v3(-548.5471, -197.9911, 82.813),
        v3(2581.0469, 461.9421, 115.095),
        v3(720.14, 4097.634, 38.075),
        v3(1242.4711, 1876.0681, 92.242),
        v3(2752.1128, 3472.779, 67.911),
        v3(-2191.856, 4292.4077, 55.013),
        v3(450.475, 5581.514, 794.0683),
    }
}

WriteLong(blip_ids, 0)
WriteLong(blip_ids, (614 | (740 << 0xA) | (779 << 0x14) | (569 << 0x1E) | (521 << 0x28) | (765 << 0x32)))

--[[
    blip_ids & 0x3FF = NIGHTCLUB
    (blip_ids >> 0xA) & 0x3FF = ARCADE
    (blip_ids >> 0x14) & 0x3FF = AUTOSHOP
    (blip_ids >> 0x1E) & 0x3FF = HANGAR
    (blip_ids >> 0x28) & 0x3FF = LAPTOP
    (blip_ids >> 0x32) & 0x3FF = CAYO_PRIMARY_TARGET
]]

function utils.register_ceo(pid) return util.trigger_script_event(1 << pid, {2041805809, 0, -1858635130, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}) end
function utils.register_vip(pid) return util.trigger_script_event(1 << pid, {2041805809, 0, -1858635130, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}) end
function utils.register_mc(pid) return util.trigger_script_event(1 << pid, {2041805809, 0, -1858635130, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}) end
function utils.off_radar(pid, amount) return util.trigger_script_event(1 << pid, {2041805809, 1, -1017535732, amount or 500, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}) end
function utils.ghost_org(pid) return util.trigger_script_event(1 << pid, {2041805809, 1, -527208501, 0, 0, 0, 7953752157564464705, 31084746152966761, 0, 0, 0, 0, 0, 0}) end
function utils.successfully_mugged(pid, amount) return util.trigger_script_event(1 << pid, {2041805809, 0, 244034214, amount or 10000, 0, 0, 0, 0, 0, 0, 2954937499648, 0, 0, 0}) end
function utils.attacked_armoured_truck(pid, attacker) return util.trigger_script_event(1 << pid, {2041805809, 0, 452938553, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}) end
function utils.empty_notification(pid) return util.trigger_script_event(1 << pid, {2041805809, 0, -1896366254, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}) end
function utils.cash_banked(pid, amount) return util.trigger_script_event(1 << pid, {2041805809, 0, 276906331, amount or utils.MAX_INT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}) end
function utils.cash_stolen(pid, amount) return util.trigger_script_event(1 << pid, {2041805809, 0, 82080686, amount or utils.MAX_INT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}) end
function utils.cash_removed(pid, amount) return util.trigger_script_event(1 << pid, {2041805809, 0, 853249803, amount or utils.MAX_INT, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}) end
function utils.jammer_activated(pid) return util.trigger_script_event(1 << pid, {2041805809, 0, -236682200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}) end
function utils.collected_pink_slip(pid, collector) return util.trigger_script_event(1 << pid, {2041805809, 0, -1364562129, 0, 0, 0, 0, 0, 0, 0, collector, 0, 0, 0}) end
function utils.player_ewo(pid, ewo) return util.trigger_script_event(1 << pid, {2041805809, 0, -1891585544, 0, 0, 0, 0, 0, 0, 0, ewo, 0, 0, 0}) end
function utils.destroyed_vehicle_cargo(pid, target) return util.trigger_script_event(1 << pid, {2041805809, 0, 117293314, 0, 0, 0, 0, 0, 0, 0, target, 0, 0, 0}) end
function utils.delivered_motorcycle(pid, target) return util.trigger_script_event(1 << pid, {2041805809, 0, 1417675950, 0, 0, 0, 0, 0, 0, 0, target, 0, 0, 0}) end
function utils.joined_org(pid, target) return util.trigger_script_event(1 << pid, {2041805809, 0, -2030849211, 0, 0, 0, 0, 0, 0, 0, target, 0, 0, 0}) end
function utils.quit_org(pid, target) return util.trigger_script_event(1 << pid, {2041805809, 0, 548541714, 0, 0, 0, 0, 0, 0, 0, target, 0, 0, 0}) end
function utils.marked_for_death(pid, marked_by) return util.trigger_script_event(1 << pid, {2041805809, 0, -1624737755, 0, 0, 0, 0, 0, 0, 0, marked_by, 0, 0, 0}) end
function utils.become_ghosted(pid, ghosted_to) return util.trigger_script_event(1 << pid, {2041805809, 0, -2051461174, 0, 0, 0, 0, 0, 0, 0, ghosted_to, 0, 0, 0}) end
function utils.interior_invite(pid) return util.trigger_script_event(1 << pid, {36077543, 0, 0}) end

function utils.simulate_control_key(key, times, control=0, delay=300)
    for i = 1, times do
        PAD.SET_CONTROL_VALUE_NEXT_FRAME(control, key, 1)
        util.yield(delay)
    end

    util.yield(100)
end

function utils.partial(func, ...)
    local args = {...}
    return function(...)
        return func(table.unpack(args), ...)
    end
end

function utils.reduce(func, tbl, ...)
    local acc = ...
    for k, v in pairs(tbl) do
        acc = func(acc, v, k)
    end
    return acc
end

function utils.map(func, tbl)
    local t = {}
    for k, v in pairs(tbl) do
        t[k] = func(v, k)
    end
    return t
end

function utils.filter(func, tbl)
    local t = {}
    for k, v in pairs(tbl) do
        if func(v, k) then
            t[k] = v
        end
    end
    return t
end

function utils.find(tbl, value)
    for k, v in pairs(tbl) do
        if v == value then
            return k
        end
    end
end

function utils.find_key(tbl, key)
    for k, v in pairs(tbl) do
        if k == key then
            return v
        end
    end
end

function utils.find_value(tbl, value)
    for k, v in pairs(tbl) do
        if v == value then
            return k
        end
    end
end

function utils.lru_cache(maxsize)
    local cache = {}
    local cache_info = { hits=0, misses=0, maxsize=maxsize, currsize=0 }
    return function(func)
        return function(...)
            local args = {...}
            local key = table.concat(args, ",")
            if cache[key] then
                cache_info.hits = cache_info.hits + 1
                return cache[key]
            else
                cache_info.misses = cache_info.misses + 1
                if cache_info.currsize >= cache_info.maxsize then
                    cache = {}
                    cache_info.currsize = 0
                end
                cache_info.currsize = cache_info.currsize + 1
                cache[key] = func(...)
                return cache[key]
            end
        end
    end
end

function utils.request_control(entity, timeout=5)
    timeout = os.time() + timeout or os.time() + 5
    repeat
        NetworkRequestControlOfEntity(entity)
        util.yield_once()
    until NetworkHasControlOfEntity(entity) or os.time() > timeout

    if not NetworkHasControlOfEntity(entity) then
        error("Failed to get control")
    end
end

function utils.request_control_cb(entity, callback, timeout=5)
    timeout = os.time() + timeout or os.time() + 5
    repeat
        NetworkRequestControlOfEntity(entity)
        util.yield_once()
    until NetworkHasControlOfEntity(entity) or os.time() > timeout

    if not NetworkHasControlOfEntity(entity) then
        callback(false)
    else
        callback(true)
    end
end

function utils.distance(v1, v2)
    return (v1.x - v2.x) ^ 2 + (v1.y - v2.y) ^ 2 + (v1.z - v2.z) ^ 2
end

function utils.delete_player(pid, state)
    local player_invis = memory.script_global(2657589 + 1 + (pid * 466) + 254)
    local off_radar = memory.script_global(2657589 + 1 + (pid * 466) + 321)
    local pause_menu = memory.script_global(1853910 + 1 + (PLAYER_ID * 862) + 192)
    local become_interior = memory.script_global(1853910 + 1 + (PLAYER_ID * 862) + 267 + 31)
    local otr_val = memory.read_short(off_radar)

    SetRemotePlayerAsGhost(pid, state)

    memory.write_byte(player_invis, state and 1 or 0)
    memory.write_short(off_radar, state ? (otr_val | 0xA) : (otr_val & ~0xA))
    memory.write_byte(pause_menu, state and 1 or 0)
    memory.write_byte(become_interior, state and 1 or 0)
end

function utils.set_player_bounty(pid, amount, state)
    utils.force_scripthost()
    local bounty = memory.script_global(1835504 + 4 + 1 + (pid * 3))
    
    memory.write_byte(bounty, state and 1 or 0)
    memory.write_short(bounty + 0x8, amount)
end

function utils.set_player_bounty_reward(pid, amount)
    utils.force_scripthost()
    local reward = memory.script_global(1894573 + 1 + (pid * 608) + 599)
    memory.write_short(reward, amount)
end

function utils.get_player_bounty(pid)
    utils.force_scripthost()
    local bounty = memory.script_global(1835504 + 4 + 1 + (pid * 3))
    return memory.read_short(bounty + 0x8)
end

function utils.get_player_bounty_reward(pid)
    utils.force_scripthost()
    local reward = memory.script_global(1894573 + 1 + (pid * 608) + 599)
    return memory.read_short(reward)
end

function utils.force_scripthost()
    local timeout = os.time()
    repeat
        if scripthost_ref:isValid() then
            scripthost_ref:trigger()
        end
        util.yield_once()
    until os.time() > timeout or players.get_script_host() == PLAYER_ID
end

function utils.display_onscreen_keyboard()
    DisplayOnscreenKeyboard(1, "FMMC_KEY_TIP8", "", "", "", "", "", 100)
    while UpdateOnscreenKeyboard() == 0 do
        util.yield_once()
    end

    if UpdateOnscreenKeyboard() == 1 then
        local text = GetOnscreenKeyboardResult()
        return text
    end
end

function utils.random_org_name(length)
    length = length or 98
    local charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
    local name = ""

    for i = 1, length do
        local rand = math.random(1, string.len(charset))
        name = name .. string.sub(charset, rand, rand)
    end

    return name
end

function utils.get_random_player()
    local list = memory.read_long(PlayerList)
    local index = 0

    repeat
        index = math.random(0, 31)
    until list & (1 << index) == (1 << index)

    return index
end

function utils.is_using_orbital_cannon(pid)
    local cannon = memory.script_global(2657589 + 1 + (pid * 466) + 427)
    return memory.read_int(cannon) & (1 << 0) == (1 << 0)
end

function utils.set_using_orbital_cannon(state)
    local cannon = memory.script_global(2657589 + 1 + (PLAYER_ID * 466) + 427)
    if state then
        memory.write_int(cannon, memory.read_int(cannon) | (1 << 0))
    else
        memory.write_int(cannon, memory.read_int(cannon) & ~(1 << 0))
    end
end

function utils.set_passive_mode(state)
    local passive = memory.script_global(1894573 + 1 + (PLAYER_ID * 608) + 8)
    memory.write_byte(passive, state and 1 or 0)
end

function utils.trigger_detection(pid, detection)
    local proot = menu.player_root(pid)
    local msg = players.get_name(pid) .. " triggered a detection: " .. detection
    local classifications = nil

    for i, child in pairs(proot:getChildren()) do
        if child:isValid() then
            local child_name = child.menu_name
            if type(child_name) == "string" then
                if child_name:find("Classification") then
                    classifications = child
                    break
                end
            end
        end
    end

    if classifications:isValid() then
        if not menu.ref_by_rel_path(classifications, detection):isValid() then
            util.toast(msg)
            classifications:action(detection, {}, "Click To Remove", function()
                for i, child in pairs(classifications:getChildren()) do
                    if child:isValid() then
                        local child_name = child.menu_name
                        if type(child_name) == "string" then
                            if child_name:find(detection) then
                                child:delete()
                                break
                            end
                        end
                    end
                end
            end)
        end
    end
end

function utils.is_player_using_drone(pid)
    return memory.read_int(memory.script_global(1853910 + 1 + (pid * 862) + 267 + 365)) & (1 << 26) == (1 << 26)
end

function utils.spectate_coords(coords, callback)
    local cam = CreateCam("DEFAULT_SCRIPTED_CAMERA", true)
    SetCamCoord(cam, coords.x, coords.y, coords.z)
    SetCamActive(cam, true)
    RenderScriptCams(true, false, 0, true, false)

    if callback then
        callback()
    end
end

function utils.stop_spectating()
    RenderScriptCams(false, false, 0, true, false)
    DestroyCam(GetRenderingCam(), false)
end

function utils.stat_get_int(stat)
    if StatGetInt(util.joaat(stat), stats_alloc, -1) then
        return memory.read_int(stats_alloc)
    else
        return -1
    end

    return -1
end

function utils.request_named_ptfx_asset(asset)
    RequestNamedPtfxAsset(asset)
    while not HasNamedPtfxAssetLoaded(asset) do
        util.yield_once()
    end
    UseParticleFxAsset(asset) 
end

function utils.request_model(model)
    RequestModel(model)
    while not HasModelLoaded(model) do
        util.yield_once()
    end
end

function utils.is_player_the_beast(pid)
    local beast = memory.script_global(2657589 + 1 + (pid * 466) + 199)
    return memory.read_int(beast) & (1 << 29) == (1 << 29)
end

function utils.request_cutscene(cutscene)
    RequestCutscene(cutscene, 8)
    while not HasThisCutsceneLoaded(cutscene) do
        util.yield_once()
    end
end

function utils.play_cutscene(cutscene)
    StartCutscene(cutscene)
end

function utils.stop_cutscene()
    StopCutsceneImmediately()
end

function utils.get_entity_aiming_at(pid)
    if GetEntityPlayerIsFreeAimingAt(pid, entity_ptr) then
        return memory.read_int(entity_ptr)
    end

    return 0
end

return utils