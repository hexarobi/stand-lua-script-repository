local root = menu.my_root()
local shadow_root = menu.shadow_root()
local T = require("translations")
local utils = require("utils")

--[[Hash (int)]] local function NetworkHashFromPlayerHandle(--[[Player (int)]] player)native_invoker.begin_call()native_invoker.push_arg_int(player)native_invoker.end_call_2(0xBC1D768F2F5D6C05)return native_invoker.get_return_value_int()end
--[[Vector3 (vector3)]] local function GetOffsetFromEntityInWorldCoords(--[[Entity (int)]] entity,--[[float]] offsetX,--[[float]] offsetY,--[[float]] offsetZ)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_float(offsetX)native_invoker.push_arg_float(offsetY)native_invoker.push_arg_float(offsetZ)native_invoker.end_call_2(0x1899F328B0E12848)return native_invoker.get_return_value_vector3()end
--[[Vehicle (int)]] local function NetToVeh(--[[int]] netHandle)native_invoker.begin_call()native_invoker.push_arg_int(netHandle)native_invoker.end_call_2(0x367B936610BA360C)return native_invoker.get_return_value_int()end
--[[BOOL (bool)]] local function DecorSetInt(--[[Entity (int)]] entity,--[[string]] propertyName,--[[int]] value)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_string(propertyName)native_invoker.push_arg_int(value)native_invoker.end_call_2(0x0CE3AA5E1CA19E10)return native_invoker.get_return_value_bool()end

local VEHICLE_KICK_PRIMARY <constexpr> = 2793046 + 852
local VEHICLE_KICK_SECONDARY <constexpr> = 2793046 + 853

local ScriptGlobal = memory.script_global
local ReadInt = memory.read_int
local ReadShort = memory.read_short
local ReadByte = memory.read_byte
local ReadFloat = memory.read_float
local ReadLong = memory.read_long
local WriteInt = memory.write_int
local WriteShort = memory.write_short
local WriteByte = memory.write_byte
local WriteUByte = memory.write_ubyte
local WriteFloat = memory.write_float
local WriteLong = memory.write_long
local Alloc = memory.alloc

local get_all_vehicles_as_pointers = entities.get_all_vehicles_as_pointers
local delete_by_pointer = entities.delete_by_pointer
local reverse_joaat = util.reverse_joaat
local get_model_hash = entities.get_model_hash
local get_name = players.get_name
local ref_by_path = menu.ref_by_path
local ref_by_rel_path = menu.ref_by_rel_path
local marked_as_admin = players.marked_as_admin
local is_godmode = players.is_godmode
local is_in_interior = players.is_ini_interior

local settings = PRESTOP -- use this memory block instead of allocating a new one since it is not being used for anything else

local pkick = nil
local skick = nil

local protections = root:list(T"Protections", {}, T"Protections")
local vehicle_protections = protections:list(T"Vehicle", {}, T"Vehicle protections")
local player_protections = protections:list(T"Player", {}, T"Player protections")
local vehicle_spoofing = vehicle_protections:list(T"Vehicle Spoofing", {}, T"Vehicle spoofing")
local detections = root:list(T"Detections", {}, T"Detections")

local function GetNetworkId(pid)
    return ReadInt(ScriptGlobal(2657589 + 1 + (pid * 466) + 38))
end

local function SetNetworkId(pid, net_id)
    WriteInt(ScriptGlobal(2657589 + 1 + (pid * 466) + 38), net_id)
end

local function GetVehicleFromNetId(pid)
    return NetToVeh(GetNetworkId(pid))
end

local local_nethash = nil

vehicle_protections:toggle(T"Vehicle Kick", {}, T"Prevents you from being kicked from any vehicle (this protection is NOT the same as Stand\'s kick from vehicle protection)", function(state)
    pkick = pkick ?? ScriptGlobal(VEHICLE_KICK_PRIMARY)
    skick = skick ?? ScriptGlobal(VEHICLE_KICK_SECONDARY)

    WriteByte(pkick, state and 0 or 1)
    WriteByte(skick, state and 1 or 0)

    pkick = nil
    skick = nil
end)

vehicle_protections:toggle_loop(T"Anti-Oppressor MKII", {}, T"Delete broomsticks so shitbags cannot use them", function()
    for get_all_vehicles_as_pointers() as entity do
        local model = reverse_joaat(get_model_hash(entity))
        if model:find("oppressor2") then
            delete_by_pointer(entity)
        end
    end
end)

vehicle_spoofing:toggle_loop(T"Vehicle Spoofing", {}, T"Revert other players attempts at trying to spoof your personal vehicle", function()
    local_nethash = local_nethash ?? NetworkHashFromPlayerHandle(PLAYER_ID)
    local list = ReadInt(PlayerList)

    for pid = 0, 31 do
        if list & (1 << pid) == (1 << pid) then
            if GetNetworkId(pid) == GetNetworkId(PLAYER_ID) then
                local veh = GetVehicleFromNetId(PLAYER_ID)
                if veh ~= 0 then
                    DecorSetInt(veh, "Player_Vehicle", local_nethash)
                    DecorSetInt(veh, "Previous_Owner", 0)
                    util.yield(100)
                    SetNetworkId(pid, -1)

                    if settings & (1 << 0) == (1 << 0) then
                        ref_by_path("Players>" .. get_name(pid) .. ">Kick>Smart"):trigger()
                    elseif settings & (1 << 1) == (1 << 1) then
                        ref_by_path("Players>" .. get_name(pid) .. ">Kick>Ban"):trigger()
                    elseif settings & (1 << 2) == (1 << 2) then
                        ref_by_path("Players>" .. get_name(pid) .. ">Crash>Elegant"):trigger()
                    end
                end
            end
        end
    end
end,
function()
    local_nethash = nil
end)

vehicle_spoofing:divider(T"Reactions")

vehicle_spoofing:toggle(T"Kick", {}, T"Kick the player who is spoofing your personal vehicle", function()
    WriteByte(settings, ReadByte(settings) | (1 << 1))
end, ReadByte(settings) & (1 << 1) == (1 << 1))

vehicle_spoofing:toggle(T"Ban Kick", {}, T"Ban kick the player who is spoofing your personal vehicle", function()
    WriteByte(settings, ReadByte(settings) | (1 << 2))
end, ReadByte(settings) & (1 << 2) == (1 << 2))

vehicle_spoofing:toggle(T"Crash", {}, T"Crash the player who is spoofing your personal vehicle", function()
    WriteByte(settings, ReadByte(settings) | (1 << 3))
end, ReadByte(settings) & (1 << 3) == (1 << 3))

player_protections:toggle_loop(T"Anti Orbital Cannon", {}, T"Prevents you from being targeted by the orbital cannon, players can still manually target you but it will be very unlikely that they will find you", function()
    local list = ReadInt(PlayerList)

    for pid = 0, 31 do
        if list & (1 << pid) == (1 << pid) and pid ~= PLAYER_ID then
            utils.set_passive_mode(utils.is_using_orbital_cannon(pid))
        end
    end

    list = nil
end,
function()
    utils.set_passive_mode(false)
end)

player_protections:toggle_loop(T"Bounty", {}, T"Prevents bounties from being set on you", function()
    if utils.get_player_bounty(PLAYER_ID) > 0 then
        utils.set_player_bounty(PLAYER_ID, -1, false)
    end
end)

player_protections:toggle_loop(T"Bounty (Session-Wide)", {}, T"Prevent bounties from being set on other players in the session", function()
    local list = ReadInt(PlayerList)

    for pid = 0, 31 do
        if list & (1 << pid) == (1 << pid) then
            if utils.get_player_bounty(pid) > 0 then
                utils.set_player_bounty(pid, 0, false)
                utils.set_player_bounty_reward(pid, 0)
            end
        end
    end

    list = nil
end)

player_protections:toggle_loop(T"Modded Bounties (Session-Wide)", {}, T"Detects and fixes modded bounties for the entire session", function()
    local list = ReadInt(PlayerList)

    for pid = 0, 31 do
        if list & (1 << pid) == (1 << pid) then
            local bounty = utils.get_player_bounty(pid)
            if bounty > 0 then
                if bounty & 0xF ~= 0x8 then
                    utils.set_player_bounty(pid, 0, false)
                    utils.set_player_bounty_reward(pid, 0)
                end
            end
        end
    end

    list = nil
end)

player_protections:toggle_loop(T"Anti-Admin", {}, T"Instantly leaves the session if an admin joins", function()
    local list = ReadInt(PlayerList)

    for pid = 0, 32 do
        if list & (1 << pid) == (1 << pid) then
            if pid ~= PLAYER_ID and list & (1 << (0x20 + pid)) ~= (1 << (0x20 + pid)) then
                ref_by_path("Online>Session>Be Alone"):trigger()
            end
        end
    end
    
    list = nil
end)

player_protections:toggle_loop(T"Anti-Godmode", {}, T"Kick anyone that is using godmode (friends are excluded by default)", function()
    local list = ReadInt(PlayerList)

    for pid = 0, 32 do
        if list & (1 << pid) == (1 << pid) then
            if pid ~= PLAYER_ID and list & (1 << (0x20 + pid)) ~= (1 << (0x20 + pid)) then
                if is_godmode(pid) then
                    if not is_in_interior(pid) then
                        ref_by_path("Players>" .. get_name(pid) .. ">Kick>Smart"):trigger()
                    end
                end
            end
        end
    end
    
    list = nil
end)

detections:toggle_loop(T"Vehicle Spoofing", {}, T"Detects when a player is spoofing your personal vehicle", function()
    local list = ReadInt(PlayerList)

    for pid = 0, 32 do
        if list & (1 << pid) == (1 << pid) and pid ~= PLAYER_ID then
            if GetNetworkId(pid) == GetNetworkId(PLAYER_ID) then
                utils.trigger_detection(pid, "Vehicle Spoofing")
            end
        end
    end
end)