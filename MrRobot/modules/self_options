local root = menu.my_root()
local shadow_root = menu.shadow_root()
local T = require("translations")
local utils = require("utils")
local pedlist = require("pedlist")
local cutscenes = require("cutscenes")

-- menu
local ref_by_path = menu.ref_by_path
local ref_by_rel_path = menu.ref_by_rel_path
local is_session_started = util.is_session_started
local create_tick_handler = util.create_tick_handler
local stand_invis_ref = ref_by_path("Self>Appearance>Invisibility")
local stand_lock_time = ref_by_path("World>Atmosphere>Clock>Lock Time")
local stand_time_midnight = ref_by_path("World>Atmosphere>Clock>Midnight")
local stand_smooth_transition = ref_by_path("World>Atmosphere>Clock>Smooth Transition")

local WriteUByte = memory.write_ubyte
local ReadByte = memory.read_byte
local WriteByte = memory.write_byte
local WriteInt = memory.write_int
local ReadInt = memory.read_int
local WriteLong = memory.write_long
local ReadLong = memory.read_long
local WriteFloat = memory.write_float
local ReadFloat = memory.read_float
local WriteShort = memory.write_short
local ReadShort = memory.read_short
local Alloc = memory.alloc
local ScriptGlobal = memory.script_global
local is_key_down = util.is_key_down
local joaat = util.joaat

--[[void]] local function ClearAllPedProps(--[[Ped (int)]] ped,--[[Any (int)]] p1)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_int(p1)native_invoker.end_call_2(0xCD8A7537A9B52F06)end
--[[void]] local function TaskPlayAnim(--[[Ped (int)]] ped,--[[string]] animDictionary,--[[string]] animationName,--[[float]] blendInSpeed,--[[float]] blendOutSpeed,--[[int]] duration,--[[int]] flag,--[[float]] playbackRate,--[[BOOL (bool)]] lockX,--[[BOOL (bool)]] lockY,--[[BOOL (bool)]] lockZ)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_string(animDictionary)native_invoker.push_arg_string(animationName)native_invoker.push_arg_float(blendInSpeed)native_invoker.push_arg_float(blendOutSpeed)native_invoker.push_arg_int(duration)native_invoker.push_arg_int(flag)native_invoker.push_arg_float(playbackRate)native_invoker.push_arg_bool(lockX)native_invoker.push_arg_bool(lockY)native_invoker.push_arg_bool(lockZ)native_invoker.end_call_2(0xEA47FE3719165B94)end
--[[void]] local function SetCurrWeatherState(--[[Hash (int)]] weatherType1,--[[Hash (int)]] weatherType2,--[[float]] percentWeather2)native_invoker.begin_call()native_invoker.push_arg_int(weatherType1)native_invoker.push_arg_int(weatherType2)native_invoker.push_arg_float(percentWeather2)native_invoker.end_call_2(0x578C752848ECFA0C)end
--[[void]] local function SetEntityInvincible(--[[Entity (int)]] entity,--[[BOOL (bool)]] toggle)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_bool(toggle)native_invoker.end_call_2(0x3882114BDE571AD4)end
--[[void]] local function SetPedArmour(--[[Ped (int)]] ped,--[[int]] amount)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_int(amount)native_invoker.end_call_2(0xCEA04D83135264CC)end
--[[void]] local function SetEntityCanBeDamaged(--[[Entity (int)]] entity,--[[BOOL (bool)]] toggle)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_bool(toggle)native_invoker.end_call_2(0x1760FFA8AB074D66)end
--[[void]] local function SetArtificialLightsState(--[[BOOL (bool)]] state)native_invoker.begin_call()native_invoker.push_arg_bool(state)native_invoker.end_call_2(0x1268615ACE24D504)end
--[[void]] local function FreezeEntityPosition(--[[Entity (int)]] entity,--[[BOOL (bool)]] toggle)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_bool(toggle)native_invoker.end_call_2(0x428CA6DBD1094446)end
--[[void]] local function SetArtificialVehicleLightsState(--[[BOOL (bool)]] toggle)native_invoker.begin_call()native_invoker.push_arg_bool(toggle)native_invoker.end_call_2(0xE2B187C0939B3D32)end
--[[BOOL (bool)]] local function NetworkHasControlOfEntity(--[[Entity (int)]] entity)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.end_call_2(0x01BF60A500E28887)return native_invoker.get_return_value_bool()end
--[[void]] local function FinalizeHeadBlend(--[[Ped (int)]] ped)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.end_call_2(0x4668D80430D6C299)end
--[[BOOL (bool)]] local function IsAudioSceneActive(--[[string]] scene)native_invoker.begin_call()native_invoker.push_arg_string(scene)native_invoker.end_call_2(0xB65B60556E2A9225)return native_invoker.get_return_value_bool()end
--[[void]] local function NetworkStartSynchronisedScene(--[[int]] netScene)native_invoker.begin_call()native_invoker.push_arg_int(netScene)native_invoker.end_call_2(0x9A1B3FCDB36C8697)end
--[[void]] local function NetworkAddSynchronisedSceneCamera(--[[int]] netScene,--[[string]] animDict,--[[string]] animName)native_invoker.begin_call()native_invoker.push_arg_int(netScene)native_invoker.push_arg_string(animDict)native_invoker.push_arg_string(animName)native_invoker.end_call_2(0xCF8BD3B0BD6D42D7)end
--[[int]] local function GetEntityMaxHealth(--[[Entity (int)]] entity)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.end_call_2(0x15D757606D170C3C)return native_invoker.get_return_value_int()end
--[[void]] local function SetPlayerMeleeWeaponDamageModifier(--[[Player (int)]] player,--[[float]] modifier,--[[BOOL (bool)]] p2)native_invoker.begin_call()native_invoker.push_arg_int(player)native_invoker.push_arg_float(modifier)native_invoker.push_arg_bool(p2)native_invoker.end_call_2(0x4A3DC7ECCC321032)end
--[[void]] local function SetPedMaxHealth(--[[Ped (int)]] ped,--[[int]] value)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_int(value)native_invoker.end_call_2(0xF5F6378C4F3419D3)end
--[[void]] local function GiveWeaponToPed(--[[Ped (int)]] ped,--[[Hash (int)]] weaponHash,--[[int]] ammoCount,--[[BOOL (bool)]] isHidden,--[[BOOL (bool)]] bForceInHand)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_int(weaponHash)native_invoker.push_arg_int(ammoCount)native_invoker.push_arg_bool(isHidden)native_invoker.push_arg_bool(bForceInHand)native_invoker.end_call_2(0xBF0FD6E56C964FCB)end
--[[void]] local function SetParkedVehicleDensityMultiplierThisFrame(--[[float]] multiplier)native_invoker.begin_call()native_invoker.push_arg_float(multiplier)native_invoker.end_call_2(0xEAE6DCC7EEE3DB1D)end
--[[void]] local function SetTimecycleModifierStrength(--[[float]] strength)native_invoker.begin_call()native_invoker.push_arg_float(strength)native_invoker.end_call_2(0x82E7FFCD5B2326B3)end
--[[Vector3 (vector3)]] local function GetGameplayCamRot(--[[int]] rotationOrder)native_invoker.begin_call()native_invoker.push_arg_int(rotationOrder)native_invoker.end_call_2(0x837765A25378F0BB)return native_invoker.get_return_value_vector3()end
--[[void]] local function SetPlayerVehicleDamageModifier(--[[Player (int)]] player,--[[float]] modifier)native_invoker.begin_call()native_invoker.push_arg_int(player)native_invoker.push_arg_float(modifier)native_invoker.end_call_2(0xA50E117CDDF82F0C)end
--[[BOOL (bool)]] local function StartAudioScene(--[[string]] scene)native_invoker.begin_call()native_invoker.push_arg_string(scene)native_invoker.end_call_2(0x013A80FC08F6E4F2)return native_invoker.get_return_value_bool()end
--[[void]] local function SetPlayerIsInAnimalForm(--[[BOOL (bool)]] toggle)native_invoker.begin_call()native_invoker.push_arg_bool(toggle)native_invoker.end_call_2(0x4EBB7E87AA0DBED4)end
--[[void]] local function SetEntityRotation(--[[Entity (int)]] entity,--[[float]] pitch,--[[float]] roll,--[[float]] yaw,--[[int]] rotationOrder,--[[BOOL (bool)]] p5)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_float(pitch)native_invoker.push_arg_float(roll)native_invoker.push_arg_float(yaw)native_invoker.push_arg_int(rotationOrder)native_invoker.push_arg_bool(p5)native_invoker.end_call_2(0x8524A8B0171D5E07)end
--[[void]] local function ShootSingleBulletBetweenCoords(--[[float]] x1,--[[float]] y1,--[[float]] z1,--[[float]] x2,--[[float]] y2,--[[float]] z2,--[[int]] damage,--[[BOOL (bool)]] p7,--[[Hash (int)]] weaponHash,--[[Ped (int)]] ownerPed,--[[BOOL (bool)]] isAudible,--[[BOOL (bool)]] isInvisible,--[[float]] speed)native_invoker.begin_call()native_invoker.push_arg_float(x1)native_invoker.push_arg_float(y1)native_invoker.push_arg_float(z1)native_invoker.push_arg_float(x2)native_invoker.push_arg_float(y2)native_invoker.push_arg_float(z2)native_invoker.push_arg_int(damage)native_invoker.push_arg_bool(p7)native_invoker.push_arg_int(weaponHash)native_invoker.push_arg_int(ownerPed)native_invoker.push_arg_bool(isAudible)native_invoker.push_arg_bool(isInvisible)native_invoker.push_arg_float(speed)native_invoker.end_call_2(0x867654CBC7606F2C)end
--[[void]] local function NetworkForceLocalUseOfSyncedSceneCamera(--[[int]] netScene)native_invoker.begin_call()native_invoker.push_arg_int(netScene)native_invoker.end_call_2(0xC9B43A33D09CADA7)end
--[[void]] local function SetPedUpperBodyDamageOnly(--[[Ped (int)]] ped,--[[BOOL (bool)]] toggle)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_bool(toggle)native_invoker.end_call_2(0xAFC976FD0580C7B3)end
--[[void]] local function SetEntityAlpha(--[[Entity (int)]] entity,--[[int]] alphaLevel,--[[BOOL (bool)]] skin)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_int(alphaLevel)native_invoker.push_arg_bool(skin)native_invoker.end_call_2(0x44A0870B7E92D7C0)end
--[[void]] local function ClearTimecycleModifier()native_invoker.begin_call()native_invoker.end_call_2(0x0F07E7745A236711)end
--[[void]] local function SetPlayerLeavePedBehind(--[[Player (int)]] player,--[[BOOL (bool)]] toggle)native_invoker.begin_call()native_invoker.push_arg_int(player)native_invoker.push_arg_bool(toggle)native_invoker.end_call_2(0xFF300C7649724A0B)end
--[[void]] local function SetEntityHealth(--[[Entity (int)]] entity,--[[int]] health,--[[int]] p2)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_int(health)native_invoker.push_arg_int(p2)native_invoker.end_call_2(0x6B76DC1F3AE6E6A3)end
--[[void]] local function SetPedSuffersCriticalHits(--[[Ped (int)]] ped,--[[BOOL (bool)]] toggle)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_bool(toggle)native_invoker.end_call_2(0xEBD76F2359F190AC)end
--[[BOOL (bool)]] local function IsPedInAnyVehicle(--[[Ped (int)]] ped,--[[BOOL (bool)]] atGetIn)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_bool(atGetIn)native_invoker.end_call_2(0x997ABD671D25CA0B)return native_invoker.get_return_value_bool()end
--[[Vehicle (int)]] local function GetVehiclePedIsIn(--[[Ped (int)]] ped,--[[BOOL (bool)]] includeLastVehicle)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_bool(includeLastVehicle)native_invoker.end_call_2(0x9A9112A0FE9A4713)return native_invoker.get_return_value_int()end
--[[int]] local function GetPedMaxHealth(--[[Ped (int)]] ped)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.end_call_2(0x4700A416E8324EF3)return native_invoker.get_return_value_int()end
--[[void]] local function SetTransitionTimecycleModifier(--[[string]] modifierName,--[[float]] transition)native_invoker.begin_call()native_invoker.push_arg_string(modifierName)native_invoker.push_arg_float(transition)native_invoker.end_call_2(0x3BCF567485E1971C)end
--[[void]] local function AddOwnedExplosion(--[[Ped (int)]] ped,--[[float]] x,--[[float]] y,--[[float]] z,--[[int]] explosionType,--[[float]] damageScale,--[[BOOL (bool)]] isAudible,--[[BOOL (bool)]] isInvisible,--[[float]] cameraShake)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_float(x)native_invoker.push_arg_float(y)native_invoker.push_arg_float(z)native_invoker.push_arg_int(explosionType)native_invoker.push_arg_float(damageScale)native_invoker.push_arg_bool(isAudible)native_invoker.push_arg_bool(isInvisible)native_invoker.push_arg_float(cameraShake)native_invoker.end_call_2(0x172AA1B624FA1013)end
--[[void]] local function SetDisableHighFallDeath(--[[Ped (int)]] ped,--[[BOOL (bool)]] toggle)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_bool(toggle)native_invoker.end_call_2(0x711794453CFD692B)end
--[[void]] local function StopAudioScene(--[[string]] scene)native_invoker.begin_call()native_invoker.push_arg_string(scene)native_invoker.end_call_2(0xDFE8422B3B94E688)end
--[[void]] local function SetRandomVehicleDensityMultiplierThisFrame(--[[float]] multiplier)native_invoker.begin_call()native_invoker.push_arg_float(multiplier)native_invoker.end_call_2(0xB3B3359379FE77D3)end
--[[BOOL (bool)]] local function AnimpostfxIsRunning(--[[string]] effectName)native_invoker.begin_call()native_invoker.push_arg_string(effectName)native_invoker.end_call_2(0x36AD3E690DA5ACEB)return native_invoker.get_return_value_bool()end
--[[void]] local function SetTimecycleModifier(--[[string]] modifierName)native_invoker.begin_call()native_invoker.push_arg_string(modifierName)native_invoker.end_call_2(0x2C933ABF17A1DF41)end
--[[BOOL (bool)]] local function NetworkRequestControlOfEntity(--[[Entity (int)]] entity)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.end_call_2(0xB69317BF5E782347)return native_invoker.get_return_value_bool()end
--[[BOOL (bool)]] local function StatSetFloat(--[[Hash (int)]] statName,--[[float]] value,--[[BOOL (bool)]] save)native_invoker.begin_call()native_invoker.push_arg_int(statName)native_invoker.push_arg_float(value)native_invoker.push_arg_bool(save)native_invoker.end_call_2(0x4851997F37FE9B3C)return native_invoker.get_return_value_bool()end
--[[int]] local function GetPlayerMaxArmour(--[[Player (int)]] player)native_invoker.begin_call()native_invoker.push_arg_int(player)native_invoker.end_call_2(0x92659B4CE1863CB3)return native_invoker.get_return_value_int()end
--[[void]] local function SetPedComponentVariation(--[[Ped (int)]] ped,--[[int]] componentId,--[[int]] drawableId,--[[int]] textureId,--[[int]] paletteId)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_int(componentId)native_invoker.push_arg_int(drawableId)native_invoker.push_arg_int(textureId)native_invoker.push_arg_int(paletteId)native_invoker.end_call_2(0x262B14F48D29DE80)end
--[[float]] local function GetLightOverrideMaxIntensityScale()native_invoker.begin_call()native_invoker.end_call_2(0x393BD2275CEB7793)return native_invoker.get_return_value_float()end
--[[void]] local function SetAmbientVehicleRangeMultiplierThisFrame(--[[float]] value)native_invoker.begin_call()native_invoker.push_arg_float(value)native_invoker.end_call_2(0x90B6DA738A9A25DA)end
--[[void]] local function ForcePedAiAndAnimationUpdate(--[[Ped (int)]] ped,--[[BOOL (bool)]] p1,--[[BOOL (bool)]] p2)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_bool(p1)native_invoker.push_arg_bool(p2)native_invoker.end_call_2(0x2208438012482A1A)end
--[[void]] local function ForceLightningFlash()native_invoker.begin_call()native_invoker.end_call_2(0xF6062E089251C898)end
--[[void]] local function SetPedConfigFlag(--[[Ped (int)]] ped,--[[int]] flagId,--[[BOOL (bool)]] value)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_int(flagId)native_invoker.push_arg_bool(value)native_invoker.end_call_2(0x1913FE4CBF41C463)end
--[[void]] local function NetworkDisableLeaveRemotePedBehind(--[[BOOL (bool)]] toggle)native_invoker.begin_call()native_invoker.push_arg_bool(toggle)native_invoker.end_call_2(0xC505036A35AFD01B)end
--[[BOOL (bool)]] local function GetPedLastWeaponImpactCoord(--[[Ped (int)]] ped,--[[Vector3* (pointer)]] coords)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_pointer(coords)native_invoker.end_call_2(0x6C4D0409BA1A2BC2)return native_invoker.get_return_value_bool()end
--[[void]] local function SetPlayerMaxExplosiveDamage(--[[Player (int)]] player,--[[float]] p1)native_invoker.begin_call()native_invoker.push_arg_int(player)native_invoker.push_arg_float(p1)native_invoker.end_call_2(0x8D768602ADEF2245)end
--[[Hash (int)]] local function GetSelectedPedWeapon(--[[Ped (int)]] ped)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.end_call_2(0x0A6DB4965674D243)return native_invoker.get_return_value_int()end
--[[void]] local function SetEntityCollision(--[[Entity (int)]] entity,--[[BOOL (bool)]] toggle,--[[BOOL (bool)]] keepPhysics)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_bool(toggle)native_invoker.push_arg_bool(keepPhysics)native_invoker.end_call_2(0x1A9205C1B9EE827F)end
--[[Ped (int)]] local function GetPlayerPed(--[[Player (int)]] player)native_invoker.begin_call()native_invoker.push_arg_int(player)native_invoker.end_call_2(0x43A66C31C68491C0)return native_invoker.get_return_value_int()end
--[[Vector3 (vector3)]] local function GetOffsetFromEntityInWorldCoords(--[[Entity (int)]] entity,--[[float]] offsetX,--[[float]] offsetY,--[[float]] offsetZ)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_float(offsetX)native_invoker.push_arg_float(offsetY)native_invoker.push_arg_float(offsetZ)native_invoker.end_call_2(0x1899F328B0E12848)return native_invoker.get_return_value_vector3()end
--[[int]] local function NetworkCreateSynchronisedScene(--[[float]] x,--[[float]] y,--[[float]] z,--[[float]] xRot,--[[float]] yRot,--[[float]] zRot,--[[int]] rotationOrder,--[[BOOL (bool)]] useOcclusionPortal,--[[BOOL (bool)]] looped,--[[float]] p9,--[[float]] animTime,--[[float]] p11)native_invoker.begin_call()native_invoker.push_arg_float(x)native_invoker.push_arg_float(y)native_invoker.push_arg_float(z)native_invoker.push_arg_float(xRot)native_invoker.push_arg_float(yRot)native_invoker.push_arg_float(zRot)native_invoker.push_arg_int(rotationOrder)native_invoker.push_arg_bool(useOcclusionPortal)native_invoker.push_arg_bool(looped)native_invoker.push_arg_float(p9)native_invoker.push_arg_float(animTime)native_invoker.push_arg_float(p11)native_invoker.end_call_2(0x7CD6BC4C2BBDD526)return native_invoker.get_return_value_int()end
--[[void]] local function AnimpostfxStop(--[[string]] effectName)native_invoker.begin_call()native_invoker.push_arg_string(effectName)native_invoker.end_call_2(0x068E835A1D0DC0E3)end
--[[BOOL (bool)]] local function StatSetInt(--[[Hash (int)]] statName,--[[int]] value,--[[BOOL (bool)]] save)native_invoker.begin_call()native_invoker.push_arg_int(statName)native_invoker.push_arg_int(value)native_invoker.push_arg_bool(save)native_invoker.end_call_2(0xB3271D7AB655B441)return native_invoker.get_return_value_bool()end
--[[void]] local function SetVehicleDensityMultiplierThisFrame(--[[float]] multiplier)native_invoker.begin_call()native_invoker.push_arg_float(multiplier)native_invoker.end_call_2(0x245A6883D966D537)end
--[[BOOL (bool)]] local function IsEntityDead(--[[Entity (int)]] entity,--[[BOOL (bool)]] p1)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_bool(p1)native_invoker.end_call_2(0x5F9532F3B5CC2551)return native_invoker.get_return_value_bool()end
--[[void]] local function SetWeatherTypeNowPersist(--[[string]] weatherType)native_invoker.begin_call()native_invoker.push_arg_string(weatherType)native_invoker.end_call_2(0xED712CA327900C8A)end
--[[float]] local function GetEntityHeading(--[[Entity (int)]] entity)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.end_call_2(0xE83D4F9BA2A38914)return native_invoker.get_return_value_float()end
--[[void]] local function AnimpostfxStopAll()native_invoker.begin_call()native_invoker.end_call_2(0xB4EDDC19532BFB85)end
--[[void]] local function ClearPedTasksImmediately(--[[Ped (int)]] ped)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.end_call_2(0xAAA34F8A7CB32098)end
--[[void]] local function SetRunSprintMultiplierForPlayer(--[[Player (int)]] player,--[[float]] multiplier)native_invoker.begin_call()native_invoker.push_arg_int(player)native_invoker.push_arg_float(multiplier)native_invoker.end_call_2(0x6DB47AA77FD94E09)end
--[[void]] local function AnimpostfxPlay(--[[string]] effectName,--[[int]] duration,--[[BOOL (bool)]] looped)native_invoker.begin_call()native_invoker.push_arg_string(effectName)native_invoker.push_arg_int(duration)native_invoker.push_arg_bool(looped)native_invoker.end_call_2(0x2206BF9A37B7F724)end
--[[int]] local function GetNetworkTime()native_invoker.begin_call()native_invoker.end_call_2(0x7A5487FE9FAA6B48)return native_invoker.get_return_value_int()end
--[[void]] local function SetLightOverrideMaxIntensityScale(--[[Any (int)]] p0)native_invoker.begin_call()native_invoker.push_arg_int(p0)native_invoker.end_call_2(0x9641588DAB93B4B5)end
--[[void]] local function SetEntityVisible(--[[Entity (int)]] entity,--[[BOOL (bool)]] toggle,--[[BOOL (bool)]] p2)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_bool(toggle)native_invoker.push_arg_bool(p2)native_invoker.end_call_2(0xEA1C610A04DB6BBB)end
--[[int]] local function GetEntityHealth(--[[Entity (int)]] entity)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.end_call_2(0xEEF059FAD016D209)return native_invoker.get_return_value_int()end
--[[void]] local function SetPedDensityMultiplierThisFrame(--[[float]] multiplier)native_invoker.begin_call()native_invoker.push_arg_float(multiplier)native_invoker.end_call_2(0x95E3D6257B166CF2)end
--[[void]] local function SetEntityProofs(--[[Entity (int)]] entity,--[[BOOL (bool)]] bulletProof,--[[BOOL (bool)]] fireProof,--[[BOOL (bool)]] explosionProof,--[[BOOL (bool)]] collisionProof,--[[BOOL (bool)]] meleeProof,--[[BOOL (bool)]] steamProof,--[[BOOL (bool)]] p7,--[[BOOL (bool)]] waterProof)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_bool(bulletProof)native_invoker.push_arg_bool(fireProof)native_invoker.push_arg_bool(explosionProof)native_invoker.push_arg_bool(collisionProof)native_invoker.push_arg_bool(meleeProof)native_invoker.push_arg_bool(steamProof)native_invoker.push_arg_bool(p7)native_invoker.push_arg_bool(waterProof)native_invoker.end_call_2(0xFAEE099C6F890BB8)end
--[[void]] local function ClearPedStoredHatProp(--[[Ped (int)]] ped)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.end_call_2(0x687C0B594907D2E8)end
--[[void]] local function SetPlayerVehicleDefenseModifier(--[[Player (int)]] player,--[[float]] modifier)native_invoker.begin_call()native_invoker.push_arg_int(player)native_invoker.push_arg_float(modifier)native_invoker.end_call_2(0x4C60E6EFDAFF2462)end
--[[void]] local function SetScenarioPedDensityMultiplierThisFrame(--[[float]] p0,--[[float]] p1)native_invoker.begin_call()native_invoker.push_arg_float(p0)native_invoker.push_arg_float(p1)native_invoker.end_call_2(0x7A556143A1C03898)end
--[[void]] local function TogglePausedRenderphases(--[[BOOL (bool)]] toggle)native_invoker.begin_call()native_invoker.push_arg_bool(toggle)native_invoker.end_call_2(0xDFC252D8A3E15AB7)end
--[[void]] local function PlaySoundFrontend(--[[int]] soundId,--[[string]] audioName,--[[string]] audioRef,--[[BOOL (bool)]] p3)native_invoker.begin_call()native_invoker.push_arg_int(soundId)native_invoker.push_arg_string(audioName)native_invoker.push_arg_string(audioRef)native_invoker.push_arg_bool(p3)native_invoker.end_call_2(0x67C540AA08E4A6F5)end
--[[void]] local function SetEntityCoordsNoOffset(--[[Entity (int)]] entity,--[[float]] xPos,--[[float]] yPos,--[[float]] zPos,--[[BOOL (bool)]] xAxis,--[[BOOL (bool)]] yAxis,--[[BOOL (bool)]] zAxis)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_float(xPos)native_invoker.push_arg_float(yPos)native_invoker.push_arg_float(zPos)native_invoker.push_arg_bool(xAxis)native_invoker.push_arg_bool(yAxis)native_invoker.push_arg_bool(zAxis)native_invoker.end_call_2(0x239A3351AC1DA385)end
--[[void]] local function SetPedMoveRateOverride(--[[Ped (int)]] ped,--[[float]] value)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_float(value)native_invoker.end_call_2(0x085BF80FA50A39D1)end
--[[void]] local function SetPedStrafeClipset(--[[Ped (int)]] ped,--[[string]] clipSet)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.push_arg_string(clipSet)native_invoker.end_call_2(0x29A28F3F8CF6D854)end
--[[void]] local function ResetPedStrafeClipset(--[[Ped (int)]] ped)native_invoker.begin_call()native_invoker.push_arg_int(ped)native_invoker.end_call_2(0x20510814175EA477)end
--[[float]] local function GetEntitySpeed(--[[Entity (int)]] entity)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.end_call_2(0xD5037BA82E12416F)return native_invoker.get_return_value_float()end
--[[BOOL (bool)]] local function StartNetworkedParticleFxNonLoopedOnPedBone(--[[string]] effectName,--[[Ped (int)]] ped,--[[float]] offsetX,--[[float]] offsetY,--[[float]] offsetZ,--[[float]] rotX,--[[float]] rotY,--[[float]] rotZ,--[[int]] boneIndex,--[[float]] scale,--[[BOOL (bool)]] axisX,--[[BOOL (bool)]] axisY,--[[BOOL (bool)]] axisZ)native_invoker.begin_call()native_invoker.push_arg_string(effectName)native_invoker.push_arg_int(ped)native_invoker.push_arg_float(offsetX)native_invoker.push_arg_float(offsetY)native_invoker.push_arg_float(offsetZ)native_invoker.push_arg_float(rotX)native_invoker.push_arg_float(rotY)native_invoker.push_arg_float(rotZ)native_invoker.push_arg_int(boneIndex)native_invoker.push_arg_float(scale)native_invoker.push_arg_bool(axisX)native_invoker.push_arg_bool(axisY)native_invoker.push_arg_bool(axisZ)native_invoker.end_call_2(0xA41B6A43642AC2CF)return native_invoker.get_return_value_bool()end
--[[Vector3 (vector3)]] local function GetEntityRotation(--[[Entity (int)]] entity,--[[int]] rotationOrder)native_invoker.begin_call()native_invoker.push_arg_int(entity)native_invoker.push_arg_int(rotationOrder)native_invoker.end_call_2(0xAFBD61CC738D9EB9)return native_invoker.get_return_value_vector3()end
--[[void]] local function SetPlayerModel(--[[Player (int)]] player,--[[Hash (int)]] model)native_invoker.begin_call()native_invoker.push_arg_int(player)native_invoker.push_arg_int(model)native_invoker.end_call_2(0x00A1CADD00108836)end

local settings = Alloc(2)
WriteUByte(settings, 0)

local INSTANT_BST <constexpr> = 2672505 + 3690
local INSTANT_BST_LOCAL <constexpr> = 8285 + 1
local TELEPORT_NEAREST_HOSPITAL <constexpr> = 2635559 + 2681
local FAST_RESPAWN <constexpr> = 1574964
local RESPAWN_STATE <constexpr> = 2672505 + 1685 + 756
local PLAYER_KILLER <constexpr> = 2672505 + 1685 + 703 + 16
local EQUIP_BALLISTIC_ARMOR <constexpr> = 2793046 + 897
local MENTAL_STATE <constexpr> = 2793046 + 4692
local BRIBE_AUTHORITIES <constexpr> = 2793046 + 4654
local ABILITIES_BITFIELD <constexpr> = 2793046 + 4660
local OTR_GHOST_TIMER <constexpr> = 2672505 + 57
local LEGIT_OFF_THE_RADAR <const> = 2657589 + 1 + (PLAYER_ID * 466) + 210
local BOUNTY_LOCAL <constexpr> = 2793046 + 1886 + 17
local BOUNTY_TIMER <constexpr> = 2359296 + 1 + (0 * 5568) + 5150 + 13
local ORBITAL_CANNON <const> = 2657589 + 1 + (PLAYER_ID * 466) + 427

local root = root:list(T"Self", {T"rself"}, "")
local healing = root:list(T"Healing", {T"healing"}, T"Healing options")
local healthmod = root:list(T"Health", {T"health"}, T"Modded health options")
local superpunch = root:list(T"Super Punch", {T"superpunch"}, T"Super Punch options")
local hiding = root:list(T"Hiding", {T"hiding"}, T"Hiding options")
local mental_state = root:list(T"Mental State", {T"mentalstate"}, T"Mental State options")
local noclip = root:list(T"No Clip", {T"noclip"}, T"No Clip options")
local bounty = root:list(T"Bounty", {T"bounty"}, T"Bounty options")
local model_changer = root:list(T"Model Changer", {T"modelchanger"}, T"Model Changer options")
local cutscene = root:list(T"Cutscenes", {T"cutscene"}, T"Cutscene options")
root:divider("")

local impact_coords = nil
local otr = nil
local bribe = nil
local invis = nil
local interior_state = nil
local respawn = nil
local respawn_state = nil
local killer_karma = nil
local mentalstate = nil
local mentalstate_value = nil
local otrghost_timer = nil
local forceghostorg = nil
local bst = nil
local bst_local = nil
local tp_hospital = nil
local ballistic_armor = nil
local bounty_local = nil
local bounty_timer = nil
local legit_otr = nil
local orbital_cannon = nil
local become_interior = nil
local pause_menu = nil

local otr_ref = nil
local interior_state_ref = nil
local invis_ref = nil

local player_ped = nil
local noclip_speed_multiplier = 1

local function SuperPunch(explosion_type, damage, isAudible, isInvisible, cameraShake)
    local ped = players.user_ped()
    impact_coords = impact_coords ?? v3()

    if util.reverse_joaat(GetSelectedPedWeapon(players.user_ped())) == "WEAPON_UNARMED" then
        if GetPedLastWeaponImpactCoord(ped, impact_coords) then 
            SetEntityProofs(ped, true, true, true, true, true, true, true, true)
            AddOwnedExplosion(ped, impact_coords.x, impact_coords.y, impact_coords.z, explosion_type, damage, isAudible, isInvisible, cameraShake)
            util.yield(500)
            SetEntityProofs(ped, false, false, false, false, false, false, false, false)
        end
    end

    ped = nil
    impact_coords = nil
end

local function ShootPlayer(target, weapon_hash, damage)
    local player = GetPlayerPed(target)
    local pos = GetOffsetFromEntityInWorldCoords(player, 0.0, 0.0, 0.0)
    ShootBulletBetweenCoords(pos.x, pos.y, pos.z, pos.x, pos.y, pos.z, damage or 100, true, weapon_hash, players.user_ped(), true, true, -1.0)
    player = nil
end

local function OffTheRadar(ghost_org=false)
    legit_otr = legit_otr ?? ScriptGlobal(2657589 + 1 + (PLAYER_ID * 466) + 210)
    otrghost_timer = otrghost_timer ?? ScriptGlobal(OTR_GHOST_TIMER)
    forceghostorg = forceghostorg ?? ScriptGlobal(ABILITIES_BITFIELD)

    if ReadByte(legit_otr) == 0 then
        local bitfield = ReadByte(forceghostorg)
        if ghost_org then
            if players.get_org_type(PLAYER_ID) == -1 then
                ghost_org = false
            end
        end

        WriteByte(forceghostorg, ghost_org ? (bitfield | 0x6) : (bitfield & ~0x6)) -- set multiple bits using a bitmask instead of doing it like a noob and setting each individually
        WriteByte(legit_otr, 1)
        WriteInt(otrghost_timer, GetNetworkTime())
    end
end

local function DisableOffTheRadar()
    legit_otr = legit_otr ?? ScriptGlobal(2657589 + 1 + (PLAYER_ID * 466) + 210)
    otrghost_timer = otrghost_timer ?? ScriptGlobal(OTR_GHOST_TIMER)

    if ReadByte(legit_otr) == 1 then
        WriteByte(legit_otr, 0)
        WriteInt(otrghost_timer, 0)
    end
end

healing:toggle_loop(T"Auto Heal", {T"autoheal"}, T"Automatically heal when your health falls below a certain threshold", function()
    local max_health = GetEntityMaxHealth(players.user_ped())
    local curr_health = GetEntityHealth(players.user_ped())
    local diff = max_health - curr_health
    local change = (diff / max_health) * 100

    if change > ReadByte(settings) & 0x7F then
        SetEntityHealth(players.user_ped(), max_health)
    end
end)

healing:slider(T"Health Threshold", {T"healthreshold"}, T"Health threshold to start healing", 0, 100, ReadByte(settings) & 0x7F, 1, function(value)
    WriteUByte(settings, ReadByte(settings) & ~0x7F | value)
end)

healthmod:toggle(T"Mod Max Health", {T"moddedhealth"}, T"Modded max health", function(state)
    if state then
        WriteUByte(settings, ReadByte(settings) | 1 << 7)
    else
        WriteUByte(settings, ReadByte(settings) & ~(1 << 7))
        SetPedMaxHealth(players.user_ped(), 328)
        SetEntityHealth(players.user_ped(), 328)
    end

end, ReadByte(settings) & (1 << 7) == (1 << 7))

healthmod:text_input(T"Max Health", {T"maxhealth"}, T"Change your max health", function(value)
    if ReadByte(settings) & (1 << 7) == (1 << 7) then
        pcall(function()
            SetPedMaxHealth(players.user_ped(), tonumber(value))
            SetEntityHealth(players.user_ped(), tonumber(value))
        end)
    end
end)

otr_ref = root:toggle(T"Off The Radar", {T"betterotr"}, T"Removes your blip from everyones minimap so they cannot see where you are (this does not trigger modder detections either)", function(state)
    otr = otr ?? ScriptGlobal(2657589 + 1 + (PLAYER_ID * 466) + 321)
    local v = ReadByte(otr)
    WriteByte(otr, state ? (v | 0xA) : (v & ~0xA))
end)

root:toggle_loop(T"Bribe Authorities", {T"bribeauthorities"}, T"Bribes the authorities so you can get away with anything", function()
    bribe = bribe ?? ScriptGlobal(BRIBE_AUTHORITIES)
    WriteByte(bribe, ReadByte(bribe) | 0x51)
end,
function()
    WriteByte(bribe, ReadByte(bribe) & ~0x51)
    bribe = nil
end)

superpunch:toggle_loop(T"Super Punch", {T"superpunch"}, T"Kills player or ped in a single hit", function()
    SuperPunch(18, 1000.0, false, true, 0.0)
end)

superpunch:toggle_loop(T"Orbital Cannon Super Punch", {T"orbitalsuperpunch"}, T"Kills anyone that is within a certain range", function()
    orbital_cannon = orbital_cannon ?? ScriptGlobal(ORBITAL_CANNON)
    WriteByte(orbital_cannon, 1)
    SuperPunch(60, 1000.0, false, true, 0.0)
end,
function()
    WriteByte(orbital_cannon, 0)
    orbital_cannon = nil
end)

invis_ref = root:toggle_loop(T"Invisibility", {T"ezinvisibility"}, T"Makes your player completely invisible, not even Stands reveal invisible players can make you visible again", function()
    invis = invis ?? ScriptGlobal(2657589 + 1 + (PLAYER_ID * 466) + 254)

    if not IsEntityDead(players.user_ped()) then
        WriteByte(invis, 1)
    else
        WriteByte(invis, 0)
    end
end,
function()
    WriteByte(invis, 0)
    invis = nil
end)

interior_state_ref = root:toggle(T"Spoof Interior State", {T"spoofinteriorstate"}, T"Spoofs your position on the map to show you as being inside of an invalid interior when you are not", function(state)
    interior_state = interior_state ?? ScriptGlobal(1853910 + 1 + (PLAYER_ID * 862) + 861)
    local bitfield = ReadShort(interior_state)

    if state then
        WriteShort(interior_state, bitfield | (1 << 12))
    else
        WriteShort(interior_state, bitfield & ~(1 << 12))
    end
end)

hiding:toggle(T"Hide Method 1", {T"disappear"}, T"Just a shortcut for enabling invisibility and off the radar", function(state)
    otr_ref.value = state
    invis_ref.value = state
end)

hiding:toggle(T"Hide Method 2", {T"disappear1"}, T"Just a shortcut for enabling invisibility and spoofing your interior state", function(state)
    interior_state_ref.value = state
    invis_ref.value = state
end)

hiding:toggle(T"Locally Visible", {}, T"Makes you locally visible, other players still won't see you", function(state)
    if stand_invis_ref:isValid() then
        stand_invis_ref.value = state and 1 or 0
    end
end)

root:toggle(T"Harden Player", {T"hardplayer"}, T"Hardens your player", function(state)
    SetPedSuffersCriticalHits(players.user_ped(), not state)
    SetPedUpperBodyDamageOnly(players.user_ped(), state)
end)

root:toggle_loop(T"Fast Respawn", {T"fastrespawn"}, T"Respawns you instantly", function()
    respawn = respawn ?? ScriptGlobal(FAST_RESPAWN)
    respawn_state = respawn_state ?? ScriptGlobal(RESPAWN_STATE)

    if ReadByte(respawn_state) ~= 0 then
        WriteByte(respawn, 1)
        util.yield_once()
        WriteByte(respawn, 0)
    end
end,
function()
    respawn = nil
    respawn_state = nil
end)

root:toggle_loop(T"Killer Karma", {T"killerkarma"}, T"Karma the player that killed you", function()
    killer_karma = killer_karma ?? ScriptGlobal(PLAYER_KILLER)
    respawn_state = respawn_state ?? ScriptGlobal(RESPAWN_STATE)
    respawn = respawn ?? ScriptGlobal(FAST_RESPAWN)

    if ReadByte(respawn_state) ~= 0 then
        local pid = ReadByte(killer_karma)
        if pid ~= 0 then
            player_ped = player_ped ?? players.user_ped()
            local ped = GetPlayerPed(pid)
            local pos = GetOffsetFromEntityInWorldCoords(ped, 0.0, 0.0, 0.0)

            if not IsDead(ped) then
                OwnedExplosion(player_ped, pos.x, pos.y, pos.z, 18, 100, false, true, 0.0)
                WriteByte(killer_karma, -1)
                WriteByte(respawn, 1)
                util.yield_once()
                WriteByte(respawn, 0)
            end
        end
    end
end,
function()
    killer_karma = nil
    respawn_state = nil
    player_ped = nil
end)

mental_state:toggle_loop(T"Anti-Psychopath", {T"antipsychopath"}, T"Prevents your mental state from rising", function()
    mentalstate = mentalstate ?? ScriptGlobal(MENTAL_STATE)
    mentalstate_value = mentalstate_value ?? ScriptGlobal(2657589 + 1 + (PLAYER_ID * 466) + 268)

    WriteByte(mentalstate, 1)
    WriteFloat(mentalstate_value, 0.0)
end,
function()
    WriteByte(mentalstate, 0)
    mentalstate = nil
    mentalstate_value = nil
end)

mental_state:toggle_loop(T"Display Mental State", {T"displaymentalstate"}, T"Displays your mental state on screen", function()
    mentalstate_value = mentalstate_value ?? ScriptGlobal(2657589 + 1 + (PLAYER_ID * 466) + 268)

    local value = ReadFloat(mentalstate_value)
    util.draw_debug_text($"Mental State: {value}")
end,
function()
    mentalstate_value = nil
end)

noclip:toggle_loop(T"No Clip", {}, T"Fly around the map", function()
    if IsPedInAnyVehicle(players.user_ped()) then
        local veh = GetVehiclePedIsIn(players.user_ped(), false)
        if veh ~= 0 then
            FreezeEntityPosition(veh, true)
            SetEntityCollision(veh, false, false)

            local rot = GetGameplayCamRot(5)
            SetEntityRotation(veh, rot.x, rot.y, rot.z, 5, true)

            if is_key_down(0x57) then -- W
                local pos = GetOffsetFromEntityInWorldCoords(veh, 0, 1 * noclip_speed_multiplier, 0)
                SetEntityCoordsNoOffset(veh, pos.x, pos.y, pos.z, false, false, false)
            elseif is_key_down(0x53) then -- S
                local pos = GetOffsetFromEntityInWorldCoords(veh, 0, -1 * noclip_speed_multiplier, 0)
                SetEntityCoordsNoOffset(veh, pos.x, pos.y, pos.z, false, false, false)
            end

            if is_key_down(0x41) then -- A
                local pos = GetOffsetFromEntityInWorldCoords(veh, -1 * noclip_speed_multiplier, 0, 0)
                SetEntityCoordsNoOffset(veh, pos.x, pos.y, pos.z, false, false, false)
            elseif is_key_down(0x44) then -- D
                local pos = GetOffsetFromEntityInWorldCoords(veh, 1 * noclip_speed_multiplier, 0, 0)
                SetEntityCoordsNoOffset(veh, pos.x, pos.y, pos.z, false, false, false)
            end

            -- left shift
            if is_key_down(0x10) then
                local pos = GetOffsetFromEntityInWorldCoords(veh, 0, 0, 1 * noclip_speed_multiplier)
                SetEntityCoordsNoOffset(veh, pos.x, pos.y, pos.z, false, false, false)
            end

            -- left control
            if is_key_down(0x11) then
                local pos = GetOffsetFromEntityInWorldCoords(veh, 0, 0, -1 * noclip_speed_multiplier)
                SetEntityCoordsNoOffset(veh, pos.x, pos.y, pos.z, false, false, false)
            end
        end
    else
        local ped = players.user_ped()
        FreezeEntityPosition(ped, true)
        SetEntityCollision(ped, false, false)

        local rot = GetGameplayCamRot(5)
        SetEntityRotation(ped, rot.x, rot.y, rot.z, 5, true)

        if is_key_down(0x57) then -- W
            local pos = GetOffsetFromEntityInWorldCoords(ped, 0, 1 * noclip_speed_multiplier, 0)
            SetEntityCoordsNoOffset(ped, pos.x, pos.y, pos.z, false, false, false)
        elseif is_key_down(0x53) then -- S
            local pos = GetOffsetFromEntityInWorldCoords(ped, 0, -1 * noclip_speed_multiplier, 0)
            SetEntityCoordsNoOffset(ped, pos.x, pos.y, pos.z, false, false, false)
        end

        if is_key_down(0x41) then -- A
            local pos = GetOffsetFromEntityInWorldCoords(ped, -1 * noclip_speed_multiplier, 0, 0)
            SetEntityCoordsNoOffset(ped, pos.x, pos.y, pos.z, false, false, false)
        elseif is_key_down(0x44) then -- D
            local pos = GetOffsetFromEntityInWorldCoords(ped, 1 * noclip_speed_multiplier, 0, 0)
            SetEntityCoordsNoOffset(ped, pos.x, pos.y, pos.z, false, false, false)
        end

        -- left shift
        if is_key_down(0x10) then
            local pos = GetOffsetFromEntityInWorldCoords(ped, 0, 0, 1 * noclip_speed_multiplier)
            SetEntityCoordsNoOffset(ped, pos.x, pos.y, pos.z, false, false, false)
        end

        -- left control
        if is_key_down(0x11) then
            local pos = GetOffsetFromEntityInWorldCoords(ped, 0, 0, -1 * noclip_speed_multiplier)
            SetEntityCoordsNoOffset(ped, pos.x, pos.y, pos.z, false, false, false)
        end
    end
end,
function()
    if IsPedInAnyVehicle(players.user_ped()) then
        local veh = GetVehiclePedIsIn(players.user_ped(), false)
        if veh ~= 0 then
            FreezeEntityPosition(veh, false)
            SetEntityCollision(veh, true, true)
        end
    else
        local ped = players.user_ped()
        FreezeEntityPosition(ped, false)
        SetEntityCollision(ped, true, true)
        ClearPedTasksImmediately(ped)
    end
end)

noclip:slider(T"Speed", {}, T"Speed multiplier", 1, 100, 1, 1, function(value)
    noclip_speed_multiplier = value
end)

root:toggle_loop(T"Infinite OTR / Ghost Org", {T"infiniteotr"}, T"Freezes the timer so it never decreases", function()
    otrghost_timer = otrghost_timer ?? ScriptGlobal(OTR_GHOST_TIMER)

    WriteInt(otrghost_timer, GetNetworkTime())
end,
function()
    otrghost_timer = nil
end)

root:toggle(T"Force Ghost Org", {T"forceghostorg"}, T"When in an org with this enabled using off the radar will force you to go ghost org instead of off the radar allowing you to remain hidden for longer", function(state)
    forceghostorg = forceghostorg ?? ScriptGlobal(ABILITIES_BITFIELD)
    local bitfield = memory.read_int(forceghostorg)

    WriteByte(forceghostorg, state ? (bitfield | 0x6) : (bitfield & ~0x6)) -- set multiple bits using a bitmask instead of doing it like a noob and setting each individually
end)

root:toggle(T"Snacks Instant Restore", {T"snacksinstantrestore"}, T"Eating any snacks will instantly restore all your health", function(state)
    for i = 113, 119 do
        if state then
            WriteFloat(ScriptGlobal(262145 + i), 100.0)
        else
            WriteFloat(ScriptGlobal(262145 + i), 1.0)
        end
    end
end)

root:toggle(T"Beast Mode", {T"beastmode"}, T"Enables beast mode which makes you stronger, faster and more durable than normal (like the beast freemode event, using this will cause you to have issues with respawning)", function(state)
    local ref = ref_by_rel_path(root, "Beast Mode")
    if not is_session_started() then
        ref.value = false
        return
    end

    if state then
        util.create_tick_handler(function()
            if not ref.value then
                return false
            end

            SetEntityHealth(players.user_ped(), 328)
        end)
        GiveWeaponToPed(players.user_ped(), util.joaat("WEAPON_UNARMED"), 0, true, true)
        ClearPedTasksImmediately(players.user_ped())
        local pos = GetOffsetFromEntityInWorldCoords(players.user_ped(), 0.05, 0.5, -1.11)
        local scene = NetworkCreateSynchronisedScene(pos.x, pos.y, pos.z, 0.0, 0.0, GetEntityHeading(players.user_ped()) + 90.0, 2, false, false, 1.0, 0.0, 1.0)
        NetworkAddSynchronisedSceneCamera(scene, "ANIM@MP_FM_EVENT@INTRO", "BEAST_TRANSFORM_CAM")
        TaskPlayAnim(players.user_ped(), "ANIM@MP_FM_EVENT@INTRO", "BEAST_TRANSFORM", 1000.0, -2.0, -1, 0, 0.0, false, false, false)
        ForcePedAiAndAnimationUpdate(players.user_ped(), false, false)
        NetworkForceLocalUseOfSyncedSceneCamera(scene)
        NetworkStartSynchronisedScene(scene)

        if not AnimpostfxIsRunning("BeastIntroScene") then
            AnimpostfxPlay("BeastIntroScene", 0, false)
        end

        StartAudioScene("FM_Event_Beast_Transform_Sequence_Scene")
        PlaySoundFrontend(-1, "Frontend_Beast_Transform_Back", "FM_Events_Sasquatch_Sounds", false)

        ClearPedStoredHatProp(players.user_ped())
        ClearAllPedProps(players.user_ped(), 1)
        SetPedConfigFlag(players.user_ped(), 189, true)
        SetPedConfigFlag(players.user_ped(), 407, true)
        SetPlayerMeleeWeaponDamageModifier(PLAYER_ID, 100.0, true)
        SetPedSuffersCriticalHits(players.user_ped(), false)
        SetDisableHighFallDeath(players.user_ped(), true)
        SetPlayerMaxExplosiveDamage(PLAYER_ID, 500.0)
        SetPedConfigFlag(players.user_ped(), 410, true)
        SetPlayerVehicleDefenseModifier(PLAYER_ID, utils.MAX_INT + 0.0)
        SetPlayerVehicleDamageModifier(PLAYER_ID, utils.MAX_INT + 0.0)
        SetPedConfigFlag(players.user_ped(), 411, true)
        WriteInt(ScriptGlobal(2694503), 0)
        SetPlayerIsInAnimalForm(true)
        SetPlayerLeavePedBehind(PLAYER_ID, false)
        NetworkDisableLeaveRemotePedBehind(true)
        FinalizeHeadBlend(players.user_ped())

        SetRunSprintMultiplierForPlayer(PLAYER_ID, 1.49)
    else
        ClearPedStoredHatProp(players.user_ped())
        ClearAllPedProps(players.user_ped(), 1)
        SetPedConfigFlag(players.user_ped(), 189, false)
        SetPedConfigFlag(players.user_ped(), 407, false)
        SetPlayerMeleeWeaponDamageModifier(PLAYER_ID, 1.0, true)
        SetPedMaxHealth(players.user_ped(), 328)
        SetEntityHealth(players.user_ped(), 328)
        SetPedSuffersCriticalHits(players.user_ped(), true)
        SetDisableHighFallDeath(players.user_ped(), false)
        SetPlayerMaxExplosiveDamage(PLAYER_ID, 100.0)
        SetPedConfigFlag(players.user_ped(), 410, false)
        SetEntityAlpha(players.user_ped(), 255, false)
        SetPlayerVehicleDefenseModifier(PLAYER_ID, 1.0)
        SetPlayerVehicleDamageModifier(PLAYER_ID, 1.0)
        SetPedConfigFlag(players.user_ped(), 411, false)
        WriteInt(ScriptGlobal(2694503), 1)
        SetPlayerIsInAnimalForm(false)
        SetPlayerLeavePedBehind(PLAYER_ID, true)
        NetworkDisableLeaveRemotePedBehind(false)
        SetPedComponentVariation(players.user_ped(), 1, 0, 0, 0)
        SetRunSprintMultiplierForPlayer(PLAYER_ID, 1.0)
    end
end)

root:toggle_loop(T"Crouch Strafe", {}, T"Make your player strafe a crouched position (only works in first person)", function()
    SetPedStrafeClipset(players.user_ped(), "move_ped_crouched_strafing")
end, function()
    ResetPedStrafeClipset(players.user_ped())
end)

root:toggle_loop(T"Tbag", {}, T"Make you tbag the ground (only works in first person)", function()
    SetPedStrafeClipset(players.user_ped(), "move_ped_crouched_strafing")
    util.yield_once()
    ResetPedStrafeClipset(players.user_ped())
end, function()
    ResetPedStrafeClipset(players.user_ped())
end)

root:toggle(T"Become An Interior", {}, T"Makes your blip look like you're inside of an interior when you are not", function(state)
    become_interior = become_interior ?? ScriptGlobal(1853910 + 1 + (PLAYER_ID * 862) + 267 + 31)
    if state then
        WriteInt(become_interior, ReadInt(become_interior) | (1 << 0))
    else
        WriteInt(become_interior, ReadInt(become_interior) & ~(1 << 0))
    end
end)

root:toggle(T"Leave Me Be", {}, T"Removes you from other players minimap and makes them invisible so they cannot cause any harm to you or interrupt your experience", function(state)
    become_interior = become_interior ?? ScriptGlobal(1853910 + 1 + (PLAYER_ID * 862) + 267 + 31)
    if state then
        WriteInt(become_interior, ReadInt(become_interior) | 0x810)
    else
        WriteInt(become_interior, ReadInt(become_interior) & ~0x810)
    end
end)

root:toggle(T"Delete All Players", {}, T"Delete all players from existence, this does not kick them", function(state)
    local list = ReadLong(PlayerList)

    for pid = 0, 32 do
        if list & (1 << pid) == (1 << pid) then
            if pid ~= PLAYER_ID then
                utils.delete_player(pid, state)
            end
        end
    end
end)

root:toggle(T"Pause Menu Active", {}, T"Make it look like you're in the pause menu when you are not", function(state)
    pause_menu = pause_menu ?? ScriptGlobal(1853910 + 1 + (PLAYER_ID * 862) + 192)
    
    WriteInt(pause_menu, state and 1 or 0)
end)

model_changer:action(T"Custom Ped", {}, T"Choose a custom ped model", function()
    local model = utils.display_onscreen_keyboard()
    local status, err = pcall(function()
        local hash = joaat(model)
        utils.request_model(hash)
        SetPlayerModel(PLAYER_ID, hash)
    end)

    if not status then
        util.log(err)
    end
end)

model_changer:action(T"Random Ped", {}, T"Choose a random ped model", function()
    local ped = pedlist[math.random(1, #pedlist)]
    local hash = joaat(ped)
    utils.request_model(hash)
    SetPlayerModel(PLAYER_ID, hash)
end)

model_changer:divider("")

for k, name in pairs(pedlist) do
    model_changer:action(tostring(name), {}, "", function()
        local hash = joaat(name)
        utils.request_model(hash)
        SetPlayerModel(PLAYER_ID, hash)
    end)
end

root:divider("")

root:action(T"Max Health", {T"maxhealth"}, T"Set your health to max", function()
    local ped = players.user_ped()
    SetEntityHealth(ped, GetEntityMaxHealth(ped))
end)

root:action(T"Max Armour", {T"maxarmour"}, T"Set your armour to max", function()
    local ped = players.user_ped()
    SetPedArmour(ped, GetPlayerMaxArmour(PLAYER_ID))
end)

root:action(T"Infinite Snacks and Armor", {T"infiniteinventory"}, T"Gives you infinite snacks and armor in your inventory", function()
    local value = (1 << 31) - 1
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "NO_BOUGHT_YUM_SNACKS"), value)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_".. "NO_BOUGHT_HEALTH_SNACKS"), value)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "NO_BOUGHT_EPIC_SNACKS"), value)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "NUMBER_OF_CHAMP_BOUGHT"), value)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "NUMBER_OF_ORANGE_BOUGHT"), value)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "NUMBER_OF_BOURGE_BOUGHT"), value)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "NUMBER_OF_SPRUNK_BOUGHT"), value)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "CIGARETTES_BOUGHT"), value)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "MP_CHAR_ARMOUR_1_COUNT"), 0)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "MP_CHAR_ARMOUR_2_COUNT"), 0)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "MP_CHAR_ARMOUR_3_COUNT"), 0)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "MP_CHAR_ARMOUR_4_COUNT"), 0)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "MP_CHAR_ARMOUR_5_COUNT"), value)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "BREATHING_APPAR_BOUGHT"), value)
end)

root:action(T"Fast Run Ability", {T"runlockfastrun"}, T"Unlocks fast run ability", function()
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "CHAR_ABILITY_1_UNLCK"), -1)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "CHAR_ABILITY_2_UNLCK"), -1)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "CHAR_ABILITY_3_UNLCK"), -1)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "CHAR_FM_ABILITY_1_UNLCK"), -1)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "CHAR_FM_ABILITY_2_UNLCK"), -1)
    StatSetInt(util.joaat("MP" .. CHAR_SLOT .. "_" .. "CHAR_FM_ABILITY_3_UNLCK"), -1)
end)

root:action(T"Instant BST", {T"instantbst"}, T"Instantly reap the reward of bst", function()
    if bst == nil then bst = ScriptGlobal(INSTANT_BST) end
    WriteByte(bst, 1)
end)

root:action(T"Reset BST Timer", {T"resetbst"}, T"Reset the bst timer", function()
    bst_local = bst_local ?? memory.script_local("freemode", INSTANT_BST_LOCAL)

    if bst_local ~= 0 then
        WriteByte(bst_local, 0)
    end
end)

root:action(T"Teleport To Nearest Hospital", {T"tpnearbyhospital"}, T"Teleport you to the nearest hospital as if someone just used the orbital cannon on you", function()
    tp_hospital = tp_hospital ?? ScriptGlobal(TELEPORT_NEAREST_HOSPITAL)

    WriteByte(tp_hospital, 1)
    util.yield(2000)
    WriteByte(tp_hospital, 0)
end)

root:action(T"Equip Ballistic Armor", {T"equiparmor"}, T"Equip ballistic armor", function()
    ballistic_armor = ballistic_armor ?? ScriptGlobal(EQUIP_BALLISTIC_ARMOR)

    if ReadByte(ballistic_armor) == 0 then
        WriteByte(ballistic_armor, 1)
    end
end)

bounty:action(T"Remove Bounty", {T"removebounty"}, T"Remove your bounty", function()
    bounty_timer = bounty_timer ?? ScriptGlobal(BOUNTY_TIMER)
    bounty_local = bounty_local ?? memory.script_local("freemode", BOUNTY_LOCAL)
    
    utils.set_player_bounty(PLAYER_ID, 0, false)
    utils.set_player_bounty_reward(PLAYER_ID, 0)
    WriteInt(bounty_timer, 2880000)
    WriteByte(bounty_local, -1)
end)

bounty:action(T"Collect Bounty", {T"collectbounty"}, T"Collect your bounty, if this does not work then remove all bounties from the entire session and re-set them", function()
    bounty_timer = bounty_timer ?? ScriptGlobal(BOUNTY_TIMER)
    bounty_local = bounty_local ?? memory.script_local("freemode", BOUNTY_LOCAL)
    
    WriteInt(bounty_timer, 2880000)
    WriteByte(bounty_local, -1)
end)

root:action(T"Off The Radar", {T"selfotr"}, T"Makes you off the radar using the same method the game does", function()
    OffTheRadar(false)
end)

root:action(T"Ghost Org", {T"selfghostorg"}, T"Makes you ghost org using the same method the game does", function()
    OffTheRadar(true)
end)

root:action(T"Reset OTR/Ghost Org Timer", {T"resetotrghostorgtimer"}, T"Reset the timer for off the radar/ghost org", function()
    otrghost_timer = otrghost_timer ?? ScriptGlobal(OTR_GHOST_TIMER)
    WriteInt(otrghost_timer, GetNetworkTime())
end)

root:action(T"Stop Hiding", {T"stophiding"}, T"Disable off the radar / ghost org", function()
    DisableOffTheRadar()
end)

cutscene:text_input(T"Play Cutscene", {T"playcutscene"}, T"Play a custom cutscene", function(text)
    utils.request_cutscene(text)
    utils.play_cutscene(text)
end)

cutscene:action(T"Stop Cutscene", {T"stopcutscene"}, T"Stop the cutscene", function()
    utils.stop_cutscene()
end)

cutscene:divider("")

for i, name in pairs(cutscenes) do
    cutscene:action(name, {T"play" .. name}, name, function()
        utils.request_cutscene(name)
        utils.play_cutscene(name)
    end)
end